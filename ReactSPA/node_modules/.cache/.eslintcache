[{"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\index.tsx":"1","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\reportWebVitals.ts":"2","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\App.tsx":"3","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\LoginPage\\LoginPage.tsx":"4","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\UserProfilePage\\UserProfilePage.tsx":"5","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\ResetPasswordPage\\ResetPasswordPage.tsx":"6","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\NewPasswordPage\\NewPasswordPage.tsx":"7","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\HomePage.tsx":"8","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\footer\\Footer.tsx":"9","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\RegisterPage\\RegisterPage.tsx":"10","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\renderfile\\RenderFileZone.tsx":"11","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\pagename\\PageName.tsx":"12","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\logo\\Logos.tsx":"13","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\formmessage\\FormMessage.tsx":"14","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\ResetPasswordPage\\ResetPasswordForm\\ResetPasswordForm.tsx":"15","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\utils\\functions.tsx":"16","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\Body.tsx":"17","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\NewPasswordPage\\NewPasswordForm\\NewPasswordForm.tsx":"18","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Head\\Head.tsx":"19","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\LoginPage\\LoginForm\\LoginForm.tsx":"20","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\UserProfilePage\\UserProfileForm\\UserProfileForm.tsx":"21","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\RegisterPage\\RegisterForm\\RegisterForm.tsx":"22","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\captureditem\\CapturedItem.tsx":"23","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\submitformbutton\\SubmitFormButton.tsx":"24","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\RightSide\\RightSide.tsx":"25","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\LeftSide.tsx":"26","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Head\\Profile\\Profile.tsx":"27","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\textformfield\\TextFormField.tsx":"28","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\ListConversation\\ListConversation.tsx":"29","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\ActionBar\\ActionBar.tsx":"30","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\NewMessage\\NewMessage.tsx":"31","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\NewGroup\\NewGroup.tsx":"32","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\NewPrivateChat\\NewPrivateChat.tsx":"33","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\RightSide\\NoSelectedConversation\\NoSelectedConversation.tsx":"34","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Head\\ProfileUserMenu\\ProfileUserMenu.tsx":"35","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\RightSide\\Chat\\Chat.tsx":"36","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\ListConversation\\Conversation\\Conversation.tsx":"37","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\RightSide\\Chat\\ListMessage\\ListMessage.tsx":"38","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\RightSide\\Chat\\SendMessageBar\\SendMessageBar.tsx":"39","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\taggedMessage\\TaggedMessage.tsx":"40","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\RightSide\\Chat\\ListMessage\\Message\\Message.tsx":"41","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\TransferedMessage\\TransferedMessage.tsx":"42","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\filedisplayer\\FileDisplayer.tsx":"43","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\SpinnerProgress\\SpinnerProgress.tsx":"44"},{"size":511,"mtime":1631311367228,"results":"45","hashOfConfig":"46"},{"size":425,"mtime":1631205359806,"results":"47","hashOfConfig":"46"},{"size":3308,"mtime":1633891872562,"results":"48","hashOfConfig":"46"},{"size":5353,"mtime":1633963293012,"results":"49","hashOfConfig":"46"},{"size":2280,"mtime":1633438213004,"results":"50","hashOfConfig":"46"},{"size":1755,"mtime":1631905277610,"results":"51","hashOfConfig":"46"},{"size":1526,"mtime":1631894276169,"results":"52","hashOfConfig":"46"},{"size":5517,"mtime":1633967942010,"results":"53","hashOfConfig":"46"},{"size":580,"mtime":1631330438602,"results":"54","hashOfConfig":"46"},{"size":3261,"mtime":1633433273179,"results":"55","hashOfConfig":"46"},{"size":15974,"mtime":1633893369262,"results":"56","hashOfConfig":"46"},{"size":219,"mtime":1631313475281,"results":"57","hashOfConfig":"46"},{"size":652,"mtime":1631303295367,"results":"58","hashOfConfig":"46"},{"size":328,"mtime":1631774394840,"results":"59","hashOfConfig":"46"},{"size":3250,"mtime":1631905146894,"results":"60","hashOfConfig":"46"},{"size":5417,"mtime":1633726472684,"results":"61","hashOfConfig":"46"},{"size":7139,"mtime":1633975685818,"results":"62","hashOfConfig":"46"},{"size":3414,"mtime":1631894252723,"results":"63","hashOfConfig":"46"},{"size":1285,"mtime":1633550047553,"results":"64","hashOfConfig":"46"},{"size":4667,"mtime":1633433570724,"results":"65","hashOfConfig":"46"},{"size":6685,"mtime":1633431427796,"results":"66","hashOfConfig":"46"},{"size":6692,"mtime":1633364574054,"results":"67","hashOfConfig":"46"},{"size":1965,"mtime":1633872213885,"results":"68","hashOfConfig":"46"},{"size":352,"mtime":1631774221950,"results":"69","hashOfConfig":"46"},{"size":845,"mtime":1631447896330,"results":"70","hashOfConfig":"46"},{"size":9610,"mtime":1633696578059,"results":"71","hashOfConfig":"46"},{"size":1232,"mtime":1633549996151,"results":"72","hashOfConfig":"46"},{"size":5296,"mtime":1633740652411,"results":"73","hashOfConfig":"46"},{"size":1489,"mtime":1633486053076,"results":"74","hashOfConfig":"46"},{"size":1621,"mtime":1631408121111,"results":"75","hashOfConfig":"46"},{"size":3882,"mtime":1633537738031,"results":"76","hashOfConfig":"46"},{"size":276,"mtime":1631825488484,"results":"77","hashOfConfig":"46"},{"size":278,"mtime":1631825506342,"results":"78","hashOfConfig":"46"},{"size":368,"mtime":1633793688363,"results":"79","hashOfConfig":"46"},{"size":821,"mtime":1633650640281,"results":"80","hashOfConfig":"46"},{"size":580,"mtime":1633624178816,"results":"81","hashOfConfig":"46"},{"size":1666,"mtime":1633714668439,"results":"82","hashOfConfig":"46"},{"size":3024,"mtime":1633961206077,"results":"83","hashOfConfig":"46"},{"size":5268,"mtime":1633906499959,"results":"84","hashOfConfig":"46"},{"size":729,"mtime":1633635897030,"results":"85","hashOfConfig":"46"},{"size":4432,"mtime":1633659246908,"results":"86","hashOfConfig":"46"},{"size":633,"mtime":1633640401227,"results":"87","hashOfConfig":"46"},{"size":1631,"mtime":1633902197581,"results":"88","hashOfConfig":"46"},{"size":879,"mtime":1633967430218,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"oqtkjb",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\index.tsx",[],["184","185"],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\reportWebVitals.ts",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\App.tsx",["186"],"import React from 'react';\n\nimport \n{\n    BrowserRouter as Router,\n    Switch,\n    Route\n}\nfrom \"react-router-dom\";\n\nimport LoginPage from './components/Pages/LoginPage/LoginPage';\nimport HomePage from './components/Pages/HomePage/HomePage';\nimport Footer from './components/shared/footer/Footer';\nimport './App.css';\nimport RegisterPage from './components/Pages/RegisterPage/RegisterPage';\nimport NewPasswordPage from './components/Pages/NewPasswordPage/NewPasswordPage';\nimport ResetPasswordPage from './components/Pages/ResetPasswordPage/ResetPasswordPage';\nimport { Redirect } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport UserProfilePage from './components/Pages/UserProfilePage/UserProfilePage';\nimport RenderFileZone from './components/shared/renderfile/RenderFileZone';\nimport AlertMessageBox from './components/shared/alertmessagebox/AlertMessageBox';\n\n\nclass App extends React.Component {\n\n  _id:string|number = \"\"\n\n  \n  cookies = new Cookies()\n\n  state = {\n    isUserAuthenticate: false,\n    userId: this._id\n  }\n\n  setUserAsAuthenticate = (isUserAuthenticate:boolean, userId:string|number) => {\n    let date = new Date()\n    let expirationDate = new Date()\n    expirationDate.setMinutes(date.getMinutes() + 7 * 24 * 60)\n\n    this.cookies.set(\"isAuthenticated\", true, {sameSite: true, expires:expirationDate })\n  }\n\n  render () {\n    return (\n      <React.StrictMode>\n        <Router>  \n          <div className=\"App\">\n            <Switch>\n                <Route path=\"/login\">\n                  {(this.cookies.get(\"isUserAuthenticate\") || this.state.isUserAuthenticate === true)?<Redirect to =\"/home\"  />: <LoginPage changeAuthenticationState = {this.setUserAsAuthenticate} userId = {this.state.userId}  />}\n                </Route>\n                <Route path=\"/home\">\n                  {/* {(!this.cookies.get(\"isUserAuthenticate\") || this.state.isUserAuthenticate !== true)?<Redirect to =\"/login\" /> : <HomePage changeAuthenticationState = {this.setUserAsAuthenticate} userId = {this.state.userId}  />} */}\n                  <HomePage changeAuthenticationState = {this.setUserAsAuthenticate} userId = {this.state.userId}  />\n                </Route>\n                <Route path=\"/register\">\n                  {(this.cookies.get(\"isUserAuthenticate\") || this.state.isUserAuthenticate === true)?<Redirect to =\"/home\" /> : <RegisterPage />}\n                </Route>\n                <Route path=\"/resetpassword\">\n                  {(this.cookies.get(\"isUserAuthenticate\") || this.state.isUserAuthenticate === true)? <Redirect to =\"/home\" /> : <ResetPasswordPage />}\n                </Route>\n                <Route path=\"/newpassword\">\n                  {(this.cookies.get(\"isUserAuthenticate\") || this.state.isUserAuthenticate === true)?<Redirect to =\"/home\" /> : <NewPasswordPage userId = {this.state.userId}/>}\n                </Route>\n                <Route path=\"/shortprofile\">\n                  <UserProfilePage />\n                </Route>\n                <Route path=\"/\">\n                  <Redirect to =\"/login\" />\n                </Route>\n              </Switch>\n              <Footer />\n              {/* <AlertMessageBox /> */}\n              <RenderFileZone />\n            </div>\n          </Router>\n      </React.StrictMode>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\LoginPage\\LoginPage.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\UserProfilePage\\UserProfilePage.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\ResetPasswordPage\\ResetPasswordPage.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\NewPasswordPage\\NewPasswordPage.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\HomePage.tsx",["187","188"],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\footer\\Footer.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\RegisterPage\\RegisterPage.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\renderfile\\RenderFileZone.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\pagename\\PageName.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\logo\\Logos.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\formmessage\\FormMessage.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\ResetPasswordPage\\ResetPasswordForm\\ResetPasswordForm.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\utils\\functions.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\Body.tsx",["189"],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\NewPasswordPage\\NewPasswordForm\\NewPasswordForm.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Head\\Head.tsx",["190"],"import { Component } from \"react\";\r\nimport Profile from \"./Profile/Profile\";\r\n\r\nimport { HorizontalLogo } from \"../../../shared/logo/Logos\";\r\nimport ProfileUserMenu from './ProfileUserMenu/ProfileUserMenu';\r\n\r\nimport \"./Head.css\";\r\n\r\nclass Head extends Component\r\n{\r\n    props:any = this.props\r\n    state = {\r\n        displayReceiverInformation : false,\r\n        senderProfile : {},\r\n        receiverProfile : {}\r\n    }\r\n\r\n    openMenu = (event:any) => {\r\n    //    console.log(event)\r\n    }\r\n\r\n    render(){\r\n        let {displayReceiverInformation, receiverProfile, senderProfile} = this.props\r\n        return (\r\n            <div className=\"homepage-head\">\r\n                {\r\n                    ((displayReceiverInformation !== true)?\r\n                    (<div className = \"logo-information\"> <HorizontalLogo /> </div>):(null))    \r\n                }\r\n                <div className = \"sender-information\"><Profile userData = {senderProfile} openMenu = {this.openMenu}/></div>\r\n                {\r\n                    (displayReceiverInformation ===  true)?\r\n                    <div className = \"receiver-information\"><Profile userData = {receiverProfile} openMenu = {this.openMenu} /></div>: null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Head","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\LoginPage\\LoginForm\\LoginForm.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\UserProfilePage\\UserProfileForm\\UserProfileForm.tsx",["191"],"import { Component, FormEvent } from 'react';\r\nimport TextFormField from \"../../../shared/textformfield/TextFormField\";\r\nimport SubmitFormButton from \"../../../shared/submitformbutton/SubmitFormButton\";\r\n\r\nimport { validateNumber, validateEmail, validatePassword } from '../../../shared/utils/functions';\r\nimport { UserProfile } from '../../../shared/utils/Types';\r\nimport defaultProfileImage from \"./../../../../wwwroot/images/person.png\";\r\nimport camera from \"./../../../../wwwroot/images/camera.png\";\r\nimport close from \"./../../../../wwwroot/images/times_white.png\";\r\n\r\nimport \"./UserProfileForm.css\"\r\n\r\nclass UserProfileForm extends Component\r\n{    \r\n    _img:string|Blob|null = \"\";\r\n    state = {\r\n        username: \"\",\r\n        about:\"Hi! Write me on EstEnLigne.\",\r\n        identity: \"\",\r\n        image: this._img,\r\n        usernameAlertMessage:\"\",\r\n        aboutAlertMessage:\"\",\r\n        imageAlertMessage: \"\",\r\n        dislayUploadImageOptions:false\r\n    }\r\n\r\n    props:any = this.props\r\n\r\n    validateEmail = (text:string) => validateEmail(text)\r\n    validateNumber = (text:string) => validateNumber(text)\r\n    validatePassword = (text:string) => validatePassword(text)\r\n\r\n    handleSubmit = (event:FormEvent) => {\r\n        event.preventDefault()\r\n        \r\n        let isValid = this.state.username.length > 2 && this.state.about.length > 2\r\n        if(isValid)\r\n        {    \r\n            let data: UserProfile = {\r\n                name: this.state.username,\r\n                identity: this.state.identity,\r\n                about: this.state.about,\r\n                image: this.state.image\r\n            }\r\n            if(!(this.state.identity === null || this.state.identity === \"\"))\r\n            {\r\n                if(true){}\r\n                else{}\r\n            }\r\n            try {\r\n                this.props.submitForm(data)\r\n            } catch (error) {}\r\n        }\r\n    }\r\n\r\n    handleChange = (fieldName:string, fieldValue:string) => {\r\n        let fieldNames = new Set([\"username\", \"about\", \"image\"])\r\n        fieldName = fieldName.toLocaleLowerCase().trim() \r\n        if(fieldNames.has(fieldName))\r\n        {\r\n            if(fieldName === \"username\")\r\n            {\r\n                var validator = /^((?=.*[A-Za-z])[A-Za-z\\d\\W]){3,}$/\r\n                if(fieldValue.trim().length === 0)\r\n                    this.setState({usernameAlertMessage: \"This field can not be empty\"})\r\n                else if(!validator.test(fieldValue.trim()))\r\n                    this.setState({usernameAlertMessage: \"This field must contains at least 3 characters\"})\r\n                else   \r\n                    this.setState({usernameAlertMessage:\"\", username : fieldValue})\r\n            }\r\n            else if (fieldName === \"about\")\r\n            {\r\n                if(fieldValue.trim().length === 0)\r\n                    this.setState({aboutAlertMessage: \"This field can not be empty\"})\r\n                else if(fieldValue.trim().length === 0)\r\n                    this.setState({aboutAlertMessage: \"This field must contains at least 3 characters\"})\r\n                else   \r\n                    this.setState({aboutAlertMessage:\"\", about : fieldValue})\r\n            }\r\n            else if (fieldName === \"image\")\r\n            {\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    takePhoto = (event:any) =>\r\n    {\r\n\r\n    }\r\n\r\n    uploadPhoto = (event:any) =>\r\n    {\r\n        //Create input type file and make it just support image file and simulate \r\n        //the click the input\r\n        \r\n        var inputFile = document.createElement(\"input\")\r\n        inputFile.setAttribute(\"type\", \"file\")\r\n        inputFile.setAttribute(\"accept\", \"image/*\")\r\n        inputFile.click()\r\n\r\n        inputFile.onchange = (event) => {\r\n            if((inputFile.files?.length??0) > 0)\r\n            {\r\n                this.setState({dislayUploadImageOptions:false})  \r\n                try {\r\n                    this.props.uploadImage(inputFile.files?.item(0))\r\n                } catch (error) {\r\n                    \r\n                }\r\n            }  \r\n        }\r\n    }\r\n\r\n    handleLeave = (fieldName:string, fieldValue:string) =>\r\n    {\r\n        \r\n    }\r\n\r\n    displayOrHideUploadImageOption = () => {\r\n        const dislayUploadImageOptions = !this.state.dislayUploadImageOptions\r\n        this.setState({dislayUploadImageOptions})\r\n    }\r\n\r\n    render(){\r\n        let styleTextarea = {\r\n            borderColor:(this.state.aboutAlertMessage!==\"\")?(\"red\"):(\"black\"),\r\n        }\r\n        let styleDiv = {\r\n            // background: `url('./../../../../wwwroot/images/person.png')`\r\n            background: \"gray\"\r\n        }\r\n        let type = (\"\"+(this.props.alertType??\"info\")).toLowerCase()\r\n        let textColor = \"text-\" + ((type === \"error\")?\"danger\":type )\r\n        return (\r\n            <form className = \"userprofile-form\" onSubmit = {this.handleSubmit}>\r\n                <div className=\"userprofile-image\" style = {styleDiv}>\r\n                    <div>\r\n                        <img src={(this.state.dislayUploadImageOptions)?close:camera} alt=\"select \" title = \"select or take image\" onClick={() => this.displayOrHideUploadImageOption()} />\r\n                        {\r\n                            (this.state.dislayUploadImageOptions)?<div className=\"userprofile-image-option\">\r\n                                <span onClick = {(event) => this.takePhoto(event)}>Take Photo</span>\r\n                                <span onClick = {(event) => this.uploadPhoto(event)}>Upload photo</span>\r\n                            </div>:null\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n                <span className={`form-alert-message ${textColor} fw-bold`}>{this.props.alertMessage}</span>\r\n                <TextFormField fieldType = \"text\" fieldName = \"username\" isRequired = {true} placeHolder = \"Enter your username\" alertMessage = {this.state.aboutAlertMessage} onChange = {this.handleChange} onBlur = {this.handleLeave} key = \"profilepage-form-field1\" required />\r\n                <span className={(this.state.aboutAlertMessage !== \"\")?\"text-danger\":\"text-success\"}>{this.state.aboutAlertMessage}</span>\r\n                <textarea name=\"about\" style = {styleTextarea} cols={30} rows = {2} minLength={2} maxLength={100} placeholder='Write something about you here' onChange = {(event) => this.handleChange(\"about\",  event.currentTarget.value)}  onBlur = {(event) => this.handleLeave(\"about\", event.currentTarget.value)} value={this.state.about} key = \"profilepage-form-field2\" required/>\r\n                <SubmitFormButton buttonName = \"Save\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfileForm","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\RegisterPage\\RegisterForm\\RegisterForm.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\captureditem\\CapturedItem.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\submitformbutton\\SubmitFormButton.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\RightSide\\RightSide.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\LeftSide.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Head\\Profile\\Profile.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\textformfield\\TextFormField.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\ListConversation\\ListConversation.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\ActionBar\\ActionBar.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\NewMessage\\NewMessage.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\NewGroup\\NewGroup.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\NewPrivateChat\\NewPrivateChat.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\RightSide\\NoSelectedConversation\\NoSelectedConversation.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Head\\ProfileUserMenu\\ProfileUserMenu.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\RightSide\\Chat\\Chat.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\LeftSide\\ListConversation\\Conversation\\Conversation.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\RightSide\\Chat\\ListMessage\\ListMessage.tsx",["192"],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\RightSide\\Chat\\SendMessageBar\\SendMessageBar.tsx",["193","194","195","196","197","198","199","200","201"],"import { Component, FormEvent } from 'react';\r\n \r\nimport smiley from \"./../../../../../../../wwwroot/images/smiley.png\";\r\nimport smileyDark from \"./../../../../../../../wwwroot/images/smiley_dark.png\";\r\nimport microphone from \"./../../../../../../../wwwroot/images/microphone.png\";\r\nimport microphoneDark from \"./../../../../../../../wwwroot/images/microphone_dark.png\";\r\nimport sendWhite1 from \"./../../../../../../../wwwroot/images/send_white.png\";\r\nimport sendWhite2 from \"./../../../../../../../wwwroot/images/send_white_d.png\";\r\nimport sendDark from \"./../../../../../../../wwwroot/images/send_dark.png\";\r\nimport trashWhite from \"./../../../../../../../wwwroot/images/trash_white.png\";\r\nimport trashDark from \"./../../../../../../../wwwroot/images/trash_dark.png\";\r\nimport attachWhite from \"./../../../../../../../wwwroot/images/attach.png\";\r\nimport attachDark from \"./../../../../../../../wwwroot/images/attach_dark.png\";\r\nimport stop from \"./../../../../../../../wwwroot/images/stop.png\";\r\nimport close from \"./../../../../../../../wwwroot/images/delete.png\";\r\nimport video from \"./../../../../../../../wwwroot/images/video_dark_1.png\";\r\nimport camera from \"./../../../../../../../wwwroot/images/camera.png\";\r\nimport photo from \"./../../../../../../../wwwroot/images/camera_dark.png\";\r\n\r\nimport TaggedMessage from '../../../../../../shared/taggedMessage/TaggedMessage';\r\n\r\nimport \"./SendMessageBar.css\"\r\n\r\n\r\nclass SendMessageBar extends Component{\r\n    props:any = this.props\r\n    state = {\r\n        message: \"\",\r\n        addFileIsOpen: false,\r\n        addEmojiIsOpen: false,\r\n        microphoneIsRecord: false,\r\n        recordMustBeDeleted: false,\r\n        messageDescriptionIsShowed: true,\r\n        cameraOptionIsOpen: false\r\n    }\r\n    onAddMessageText = (event:FormEvent) =>{\r\n        event.preventDefault()\r\n        this.setState({message:\"\"})\r\n        this.props.onSendMessage(this.state.message, \"\", this.props.name, this.props.category)\r\n    }\r\n\r\n    onChange = (event:any) =>{\r\n        this.setState({message:event.currentTarget.value})\r\n    } \r\n\r\n    onSelectFile = (event:any) => {\r\n        var input = document.createElement(\"input\")\r\n        input.setAttribute(\"type\", \"file\")\r\n        input.click()\r\n\r\n        input.onload = (event) => {\r\n            console.log(event, input.files?.item(0), \"okey1\")\r\n        }\r\n\r\n        input.onchange = (event) =>{\r\n            console.log(input.files?.item(0), 'file')\r\n        }\r\n\r\n        let file:any = null\r\n        //Open selector here\r\n        // this.props.onSendMessage(\"\", file, this.props.name, this.props.category)\r\n    }\r\n\r\n    takeVideo = (event:any) =>\r\n    {\r\n\r\n    }\r\n\r\n    takePhoto = (event:any) =>\r\n    {\r\n\r\n    }\r\n\r\n    onSelectEmoji = (event:any) => {\r\n        console.log(\"select emoji\")\r\n    }\r\n\r\n    onRecordMicrophone = (event:any) => {\r\n        console.log(\"record\")\r\n    }\r\n\r\n    onCloseButtonPress = (event:any) =>\r\n    {\r\n        this.setState({messageDescriptionIsShowed:false})\r\n    }\r\n\r\n    onOpenOption = (event:any) =>{\r\n        // var cameraOptionIsOpen = !this.state.cameraOptionIsOpen\r\n        // this.setState({cameraOptionIsOpen})\r\n        var displayMediaZone = document.getElementById(\"display-media-box\")\r\n        displayMediaZone?.style.setProperty(\"display\", \"flex\")\r\n    }   \r\n\r\n    render(){\r\n        return (\r\n            <div className = \"send-message-bar\">\r\n                {(this.state.messageDescriptionIsShowed)?<div className=\"description-bar\">\r\n                    <TaggedMessage />\r\n                    <img src={close} onClick = {this.onCloseButtonPress} alt=\"\" />\r\n                </div>:null}\r\n                <div className = \"sending-bar\">\r\n                    <div className=\"message-camera\"> \r\n                        {(this.state.cameraOptionIsOpen)?<div className=\"camera-list-option\">\r\n                            <div className=\"camera-option\" onClick = {this.takePhoto}>\r\n                                <img src={photo} alt=\"pic\" />\r\n                                <span>Take photo</span>\r\n                            </div>\r\n                            <div className=\"camera-option\" onClick = {this.takeVideo}>\r\n                                <img src={video} alt=\"video\" />\r\n                                <span>Take video</span>\r\n                            </div>\r\n                        </div>:null}\r\n                        <img src={camera} alt=\"\" onClick = {this.onOpenOption} /> \r\n                    </div>\r\n                    <div className=\"message-smiley\"> <img src={smiley} alt=\"\" onClick = {this.onSelectEmoji} /> </div>\r\n                    <div className = \"message-form\"> \r\n                        <textarea placeholder=\"Write new message\" value={this.state.message} onChange = {this.onChange} required/>\r\n                        <button type=\"submit\" onClick={this.onAddMessageText}><img src={sendWhite1} alt=\"\" /></button>\r\n                    </div>\r\n                    <div className = \"message-attach-files\"> <img src={attachWhite} onClick = {this.onSelectFile} alt=\"\" /> </div>\r\n                    <div className = \"message-record\"> <img src={microphone} alt=\"\" onClick = {this.onRecordMicrophone} /> </div>    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessageBar","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\taggedMessage\\TaggedMessage.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\Pages\\HomePage\\Body\\RightSide\\Chat\\ListMessage\\Message\\Message.tsx",["202"],"import { Component } from \"react\";\r\n\r\nimport isWaiting from \"./../../../../../../../../wwwroot/images/important_2.png\"\r\nimport tickDark from \"./../../../../../../../../wwwroot/images/tick_dark.png\"\r\nimport doubleTickReceived from \"./../../../../../../../../wwwroot/images/double_tick_dark_1.png\"\r\nimport doubleTickRead from \"./../../../../../../../../wwwroot/images/double_tick_blue_2.png\"\r\n\r\nimport TaggedMessage from '../../../../../../../shared/taggedMessage/TaggedMessage';\r\nimport TransferedMessage from '../../../../../../../shared/TransferedMessage/TransferedMessage';\r\n\r\nimport \"./Message.css\"\r\nimport FileDisplayer from \"../../../../../../../shared/filedisplayer/FileDisplayer\";\r\n\r\nclass Message extends Component{\r\n    props:any = this.props\r\n\r\n    messageOptionsAreDisplayed = false\r\n\r\n    onShowHideMessageOption = (event:React.MouseEvent<HTMLSpanElement, MouseEvent>) => \r\n    {\r\n        var div = event.currentTarget.nextElementSibling as HTMLDivElement\r\n        this.messageOptionsAreDisplayed = !this.messageOptionsAreDisplayed\r\n        if(this.messageOptionsAreDisplayed === true)\r\n            div.style.setProperty(\"display\", \"none\")\r\n        else\r\n            div.style.setProperty(\"display\", \"flex\")\r\n    }\r\n\r\n    onShow = (event:React.FocusEvent<HTMLSpanElement>) => \r\n    {\r\n        var div = event.currentTarget.nextElementSibling as HTMLDivElement\r\n        div.style.setProperty(\"display\", \"flex\")\r\n    }\r\n\r\n    onHide = (event:React.SyntheticEvent<HTMLSpanElement, Event>) => \r\n    {\r\n        var div = event.currentTarget.nextElementSibling as HTMLDivElement\r\n        div.style.setProperty(\"display\", \"none\")\r\n    }\r\n\r\n\r\n    render(){\r\n        var {\r\n            type, isIncomingMessage, \r\n            isTransfered, isTagged, \r\n            taggetMessageData, message, \r\n            time, status, \r\n            onTaggedMessage, onEnableDeletion, \r\n            onShareMessage, file} = this.props\r\n        \r\n        return (\r\n            <div className ={`prev-message ${(isIncomingMessage===true)?\"incoming-message\":\"outgoing-message\"}`}>\r\n                <div> \r\n                    <span onClick = {(event)=> this.onShowHideMessageOption(event)} onBlur={(event)=> this.onHide(event)}>...</span>\r\n                    <div className=\"prev-message-option\">\r\n                        <span onClick = {onTaggedMessage}> Reply </span>\r\n                        <span onClick = {onEnableDeletion}> Delete </span>\r\n                        <span onClick = {onShareMessage}> Shared </span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"prev-message-content\">\r\n                    {((isTransfered===true)?\r\n                        (<TransferedMessage message={\"This is the shared message\"} />):\r\n                        ((isTagged === true)?\r\n                        (<TaggedMessage />):null))}\r\n                        {(isTransfered !== true && type === \"file\")?<FileDisplayer size={file.size} fileSrc={file.src} name = {file.name}/>:null}\r\n                        {(isTransfered !== true && message.length > 0)?<span className={(isIncomingMessage===true)?\"incoming-message-text\":\"outgoing-message-text\"}>{message}</span>:null}\r\n                    </div>\r\n                    <div className=\"sending-information\">\r\n                        {\r\n                            (isIncomingMessage === true)?null:<span className=\"send-image\">\r\n                            <img src={outGoingsendImage(status)} alt=\"\" />\r\n                            </span>\r\n                        }\r\n                        <span className=\"send-datetime\">{time}</span>\r\n                    </div>\r\n                    {/* <div className=\"failed-sending\">\r\n                        {\r\n                            (isIncomingMessage === true)?null:<span className=\"failed-sending-image\">\r\n                            <img src={important2} alt=\"\" />\r\n                            </span>\r\n                        }\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message\r\n\r\nfunction outGoingsendImage(status:string) {\r\n        switch (status) {\r\n            case \"send\":\r\n                return tickDark;\r\n            case \"received\":\r\n                return doubleTickReceived\r\n            case \"read\":\r\n                return doubleTickRead\r\n            default:\r\n                return isWaiting;\r\n    };\r\n}\r\n","C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\TransferedMessage\\TransferedMessage.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\filedisplayer\\FileDisplayer.tsx",[],"C:\\Users\\ketis\\Documents\\estenligne\\ReactSPA\\src\\components\\shared\\SpinnerProgress\\SpinnerProgress.tsx",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":22,"column":8,"nodeType":"209","messageId":"210","endLine":22,"endColumn":23},{"ruleId":"207","severity":1,"message":"211","line":9,"column":10,"nodeType":"209","messageId":"210","endLine":9,"endColumn":25},{"ruleId":"207","severity":1,"message":"212","line":57,"column":13,"nodeType":"209","messageId":"210","endLine":57,"endColumn":19},{"ruleId":"207","severity":1,"message":"213","line":6,"column":10,"nodeType":"209","messageId":"210","endLine":6,"endColumn":17},{"ruleId":"207","severity":1,"message":"214","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":23},{"ruleId":"207","severity":1,"message":"215","line":7,"column":8,"nodeType":"209","messageId":"210","endLine":7,"endColumn":27},{"ruleId":"207","severity":1,"message":"216","line":21,"column":13,"nodeType":"209","messageId":"210","endLine":21,"endColumn":30},{"ruleId":"207","severity":1,"message":"217","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":18},{"ruleId":"207","severity":1,"message":"218","line":6,"column":8,"nodeType":"209","messageId":"210","endLine":6,"endColumn":22},{"ruleId":"207","severity":1,"message":"219","line":8,"column":8,"nodeType":"209","messageId":"210","endLine":8,"endColumn":18},{"ruleId":"207","severity":1,"message":"220","line":9,"column":8,"nodeType":"209","messageId":"210","endLine":9,"endColumn":16},{"ruleId":"207","severity":1,"message":"221","line":10,"column":8,"nodeType":"209","messageId":"210","endLine":10,"endColumn":18},{"ruleId":"207","severity":1,"message":"222","line":11,"column":8,"nodeType":"209","messageId":"210","endLine":11,"endColumn":17},{"ruleId":"207","severity":1,"message":"223","line":13,"column":8,"nodeType":"209","messageId":"210","endLine":13,"endColumn":18},{"ruleId":"207","severity":1,"message":"224","line":14,"column":8,"nodeType":"209","messageId":"210","endLine":14,"endColumn":12},{"ruleId":"207","severity":1,"message":"225","line":59,"column":13,"nodeType":"209","messageId":"210","endLine":59,"endColumn":21},{"ruleId":"207","severity":1,"message":"226","line":46,"column":13,"nodeType":"209","messageId":"210","endLine":46,"endColumn":30},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"@typescript-eslint/no-unused-vars","'AlertMessageBox' is defined but never used.","Identifier","unusedVar","'requestWithBody' is defined but never used.","'userId' is assigned a value but never used.","'FileDTO' is defined but never used.","'ProfileUserMenu' is defined but never used.","'defaultProfileImage' is defined but never used.","'audioFile' is assigned a value but never used.","'smileyDark' is defined but never used.","'microphoneDark' is defined but never used.","'sendWhite2' is defined but never used.","'sendDark' is defined but never used.","'trashWhite' is defined but never used.","'trashDark' is defined but never used.","'attachDark' is defined but never used.","'stop' is defined but never used.","'file' is assigned a value but never used.","'taggetMessageData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]