{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\HomePage\\\\Body\\\\LeftSide\\\\ListConversation\\\\Conversation\\\\Conversation.tsx\";\nimport { Component } from \"react\";\nimport \"./Conversation.css\"; // import person from \"./.././../../../../../../wwwroot/images/person.png\";\n\nimport people1 from \"./.././../../../../../../wwwroot/images/people_bw.png\"; // import people2 from \"./.././../../../../../../wwwroot/images/people_skin.png\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Conversation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.props = this.props;\n  }\n\n  formatDate(strDate) {\n    var current = new Date();\n    var old = Date.parse(strDate);\n    var diff = current.getTime() - old;\n    var daysMs = 1000 * 60 * 60 * 24;\n    var hoursMs = 1000 * 60 * 60;\n    var minutesMs = 1000 * 60 * 60;\n    var days = diff / daysMs;\n    days = days - days % 1;\n    diff %= daysMs;\n    var hours = diff / hoursMs;\n    hours = hours - hours % 1;\n    diff %= hoursMs;\n    var minutes = diff / minutesMs;\n    minutes = minutes - minutes % 1;\n\n    if (days > 7) {\n      var date = new Date(old);\n      return `${date.getDay()}/${date.getMonth()}/${date.getFullYear()}`;\n    } else if (days > 0) {\n      var weeks = {\n        1: \"Monday\",\n        2: \"Tuesday\",\n        3: \"Wednesday\",\n        4: \"Thursday\",\n        5: \"Friday\",\n        6: \"Saturday\",\n        7: \"Sunday\"\n      };\n\n      var _diff = current.getDay() - days;\n\n      _diff = _diff <= 0 ? 7 + _diff : _diff;\n      return `${weeks[_diff]}`;\n    } else return `${hours}h${minutes}`;\n  }\n\n  render() {\n    const {\n      image,\n      name,\n      datetime,\n      unreads,\n      message,\n      status,\n      email,\n      id\n    } = this.props.data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation\",\n      onClick: this.props.onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image !== null && image !== void 0 ? image : people1,\n          title: name,\n          alt: `${name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"destinator\",\n            children: `${name}`.substring(0, 17) + (`${name}`.length > 17 ? \"...\" : \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"datetime\",\n              children: this.formatDate(datetime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), unreads > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"unreads\",\n              children: unreads\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 44\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message\",\n            children: `${message}`.substring(0, 40) + (`${message}`.length > 40 ? \"...\" : \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status\",\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, `${email}${id}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Conversation;","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/HomePage/Body/LeftSide/ListConversation/Conversation/Conversation.tsx"],"names":["Component","people1","Conversation","props","formatDate","strDate","current","Date","old","parse","diff","getTime","daysMs","hoursMs","minutesMs","days","hours","minutes","date","getDay","getMonth","getFullYear","weeks","_diff","render","image","name","datetime","unreads","message","status","email","id","data","onClick","substring","length"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\n\r\nimport \"./Conversation.css\"\r\n// import person from \"./.././../../../../../../wwwroot/images/person.png\";\r\nimport people1 from \"./.././../../../../../../wwwroot/images/people_bw.png\";\r\n// import people2 from \"./.././../../../../../../wwwroot/images/people_skin.png\";\r\n\r\nclass Conversation extends Component {\r\n    props:any = this.props\r\n    \r\n    formatDate(strDate:string):string\r\n    {\r\n        var current =  new Date()\r\n        var old = Date.parse(strDate)\r\n        var diff = current.getTime() - old\r\n\r\n        var daysMs = 1000*60*60*24\r\n        var hoursMs = 1000*60*60\r\n        var minutesMs = 1000*60*60\r\n        \r\n        var days = diff/daysMs\r\n        days = days - days%1\r\n        diff %= daysMs\r\n\r\n        var hours = diff/hoursMs\r\n        hours = hours - hours%1\r\n        diff %= hoursMs\r\n\r\n        var minutes = diff/minutesMs\r\n        minutes = minutes - minutes%1\r\n\r\n        if(days > 7)\r\n        {\r\n            var date = new Date(old)\r\n            return `${date.getDay()}/${date.getMonth()}/${date.getFullYear()}`\r\n        }\r\n        else if( days > 0)\r\n        {\r\n            var weeks:any = {1: \"Monday\", 2:\"Tuesday\", 3: \"Wednesday\", 4:\"Thursday\", 5: \"Friday\", 6:\"Saturday\", 7:\"Sunday\"}\r\n            var _diff = current.getDay() - days\r\n            _diff = (_diff <= 0)?7 + _diff:_diff\r\n            return `${weeks[_diff]}`\r\n        }\r\n        else\r\n            return `${hours}h${minutes}`\r\n    }\r\n\r\n    render() {\r\n        const {image, name, datetime, unreads, message, status, email, id} = this.props.data;\r\n        return (\r\n            <div className=\"conversation\" key={`${email}${id}`} onClick = {this.props.onClick}>\r\n                <div className=\"image\"><img src={image??people1} title={name} alt={`${name}`} /></div>\r\n                <div className = \"description\">\r\n                    <div className=\"description-top\">\r\n                        <span className=\"destinator\">{(`${name}`.substring(0, 17)) + ((`${name}`.length>17)?\"...\":\"\")}</span>\r\n                        <div>\r\n                            <span className=\"datetime\">{this.formatDate(datetime)}</span>\r\n                            {(unreads > 0)?<span className=\"unreads\">{unreads}</span>:null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"description-bottom\">\r\n                        <span className=\"message\">{(`${message}`.substring(0, 40)) + ((`${message}`.length>40)?\"...\":\"\")}</span>\r\n                        <span className=\"status\">{status}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Conversation\r\n"]},"metadata":{},"sourceType":"module"}