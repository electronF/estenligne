{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\HomePage\\\\Body\\\\RightSide\\\\Chat\\\\ListMessage\\\\ListMessage.tsx\";\nimport { Component } from \"react\";\nimport Message from \"./Message/Message\";\nimport \"./ListMessage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListMessage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.props = this.props;\n  }\n\n  render() {\n    let messages = this.props.messages.map(data => /*#__PURE__*/_jsxDEV(Message, {\n      category: data.category,\n      type: data.file === \"\" || data.file === null ? \"text\" : \"file\",\n      isIncomingMessage: data.isIncomingMessage,\n      message: data.message,\n      file: data.file,\n      isTransfered: data.isTransfered,\n      isTagged: data.isTagget,\n      taggetMessageData: data.taggedMessage,\n      time: getMessageTime(`${data.dateTime}`),\n      status: getMessageSendingStatus(data.isIncomingMessage, data.isSend, data.isReceive, data.isRead),\n      onTaggedMessage: this.props.onTaggedMessage,\n      onEnableDeletion: this.props.onEnableDeletion,\n      onShareMessage: this.props.onShareMessage\n    }, \"message\" + new Date().getTime() + Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 69\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-message\",\n      children: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListMessage;\n\nfunction getMessageTime(datetime) {\n  let time = datetime.split(\"T\")[1];\n  let to = time.lastIndexOf(\":\");\n  console.log(time, datetime);\n  return time.substring(0, to);\n}\n\nfunction getMessageSendingStatus(isIncomingMessage, isSend, isReceive, isRead) {\n  if (!isIncomingMessage && isSend && isReceive && isRead) return \"read\";else if (!isIncomingMessage && isSend && isReceive) return \"received\";else if (!isIncomingMessage && isSend) return \"send\";else return \"not-send\";\n}","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/HomePage/Body/RightSide/Chat/ListMessage/ListMessage.tsx"],"names":["Component","Message","ListMessage","props","render","messages","map","data","category","file","isIncomingMessage","message","isTransfered","isTagget","taggedMessage","getMessageTime","dateTime","getMessageSendingStatus","isSend","isReceive","isRead","onTaggedMessage","onEnableDeletion","onShareMessage","Date","getTime","Math","random","datetime","time","split","to","lastIndexOf","console","log","substring"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAO,mBAAP;;;AAGA,MAAMC,WAAN,SAA0BF,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACnB,KAAKA,KADc;AAAA;;AAG/BC,EAAAA,MAAM,GAAE;AACJ,QAAIC,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAAX,CAAoBC,GAApB,CAAyBC,IAAD,iBAAqB,QAAC,OAAD;AAAkE,MAAA,QAAQ,EAAEA,IAAI,CAACC,QAAjF;AAA2F,MAAA,IAAI,EAAKD,IAAI,CAACE,IAAL,KAAY,EAAZ,IAAkBF,IAAI,CAACE,IAAL,KAAc,IAAjC,GAAuC,MAAvC,GAA8C,MAAjJ;AACJ,MAAA,iBAAiB,EAAIF,IAAI,CAACG,iBADtB;AAEJ,MAAA,OAAO,EAAIH,IAAI,CAACI,OAFZ;AAGJ,MAAA,IAAI,EAAIJ,IAAI,CAACE,IAHT;AAIJ,MAAA,YAAY,EAAIF,IAAI,CAACK,YAJjB;AAKJ,MAAA,QAAQ,EAAIL,IAAI,CAACM,QALb;AAMJ,MAAA,iBAAiB,EAAIN,IAAI,CAACO,aANtB;AAOJ,MAAA,IAAI,EAAIC,cAAc,CAAE,GAAER,IAAI,CAACS,QAAS,EAAlB,CAPlB;AAQJ,MAAA,MAAM,EAAIC,uBAAuB,CAACV,IAAI,CAACG,iBAAN,EAAyBH,IAAI,CAACW,MAA9B,EAAsCX,IAAI,CAACY,SAA3C,EAAsDZ,IAAI,CAACa,MAA3D,CAR7B;AASJ,MAAA,eAAe,EAAI,KAAKjB,KAAL,CAAWkB,eAT1B;AAUJ,MAAA,gBAAgB,EAAI,KAAKlB,KAAL,CAAWmB,gBAV3B;AAWJ,MAAA,cAAc,EAAI,KAAKnB,KAAL,CAAWoB;AAXzB,OAAc,YAAa,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAZ,GAAqCC,IAAI,CAACC,MAAL,EAAnD;AAAA;AAAA;AAAA;AAAA,YAA7C,CAAf;AAaA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKtB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtB8B;;AAyBnC,eAAeH,WAAf;;AAEA,SAASa,cAAT,CAAwBa,QAAxB,EAAyC;AACrC,MAAIC,IAAI,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;AACA,MAAIC,EAAE,GAAGF,IAAI,CAACG,WAAL,CAAiB,GAAjB,CAAT;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkBD,QAAlB;AACA,SAAOC,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBJ,EAAlB,CAAP;AACH;;AAED,SAASd,uBAAT,CAAiCP,iBAAjC,EAA6DQ,MAA7D,EAA6EC,SAA7E,EAAgGC,MAAhG,EACA;AACI,MAAG,CAACV,iBAAD,IAAsBQ,MAAtB,IAAgCC,SAAhC,IAA6CC,MAAhD,EAAwD,OAAO,MAAP,CAAxD,KACK,IAAG,CAACV,iBAAD,IAAsBQ,MAAtB,IAAgCC,SAAnC,EAA8C,OAAO,UAAP,CAA9C,KACA,IAAG,CAACT,iBAAD,IAAsBQ,MAAzB,EAAiC,OAAO,MAAP,CAAjC,KACA,OAAO,UAAP;AACR","sourcesContent":["import { Component } from \"react\";\r\nimport Message from \"./Message/Message\";\r\n\r\nimport \"./ListMessage.css\"\r\nimport { MessageDTO } from \"../../../../../../shared/utils/Types\";\r\n\r\nclass ListMessage extends Component{\r\n    props:any = this.props\r\n\r\n    render(){\r\n        let messages = this.props.messages.map((data:MessageDTO) => <Message key={\"message\" + (new Date()).getTime() + Math.random()} category={data.category} type = {(data.file===\"\" || data.file === null)?\"text\":\"file\"}  \r\n                                                                isIncomingMessage = {data.isIncomingMessage}\r\n                                                                message = {data.message} \r\n                                                                file = {data.file}\r\n                                                                isTransfered = {data.isTransfered}\r\n                                                                isTagged = {data.isTagget}\r\n                                                                taggetMessageData = {data.taggedMessage}\r\n                                                                time = {getMessageTime(`${data.dateTime}`)}  \r\n                                                                status = {getMessageSendingStatus(data.isIncomingMessage, data.isSend, data.isReceive, data.isRead)}\r\n                                                                onTaggedMessage = {this.props.onTaggedMessage}\r\n                                                                onEnableDeletion = {this.props.onEnableDeletion}\r\n                                                                onShareMessage = {this.props.onShareMessage}\r\n                                                             />)\r\n        return (\r\n            <div className=\"list-message\">\r\n                {messages}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListMessage\r\n\r\nfunction getMessageTime(datetime:string) {\r\n    let time = datetime.split(\"T\")[1]\r\n    let to = time.lastIndexOf(\":\")\r\n    console.log(time, datetime)\r\n    return time.substring(0, to);\r\n}\r\n\r\nfunction getMessageSendingStatus(isIncomingMessage: boolean, isSend:boolean, isReceive:boolean, isRead:boolean)\r\n{\r\n    if(!isIncomingMessage && isSend && isReceive && isRead) return \"read\"\r\n    else if(!isIncomingMessage && isSend && isReceive) return \"received\";\r\n    else if(!isIncomingMessage && isSend) return \"send\"\r\n    else return \"not-send\"\r\n}\r\n"]},"metadata":{},"sourceType":"module"}