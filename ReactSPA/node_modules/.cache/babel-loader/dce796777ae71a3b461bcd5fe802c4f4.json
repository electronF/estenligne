{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\HomePage\\\\Body\\\\RightSide\\\\Chat\\\\ListMessage\\\\ListMessage.tsx\";\nimport { Component } from \"react\";\nimport Message from \"./Message/Message\";\nimport \"./ListMessage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListMessage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.props = this.props;\n  }\n\n  render() {\n    var file = {\n      id: 1,\n      \"name\": \"../../../../../../../wwwroot/images/kaput&zosky.jpg\",\n      \"size\": 19400,\n      \"purpose\": 0,\n      \"dateUploaded\": \"2021-10-05T22:22:35.093Z\",\n      \"dateDeleted\": \"2021-10-05T22:22:35.093Z\"\n    }; // {(data.file===\"\" || data.file === null)?\"text\":\"file\"} \n\n    let messages = this.props.messages.map(data => /*#__PURE__*/_jsxDEV(Message, {\n      category: data.category,\n      type: \"file\",\n      isIncomingMessage: data.isIncomingMessage,\n      message: data.message,\n      file: file,\n      isTransfered: data.isTransfered,\n      isTagged: true,\n      taggetMessageData: data.taggedMessage,\n      time: getMessageTime(`${data.dateTime}`),\n      status: getMessageSendingStatus(data.isIncomingMessage, data.isSend, data.isReceive, data.isRead),\n      onTaggedMessage: this.props.onTaggedMessage,\n      onEnableDeletion: this.props.onEnableDeletion,\n      onShareMessage: this.props.onShareMessage\n    }, \"message\" + new Date().getTime() + Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 69\n    }, this)); //isTagged = {data.isTagget}\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-message\",\n      children: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction getMessageTime(datetime) {\n  let time = datetime.split(\"T\")[1].split('+')[0];\n  let to = time.lastIndexOf(\":\");\n  return time.substring(0, to);\n}\n\nfunction getMessageSendingStatus(isIncomingMessage, isSend, isReceive, isRead) {\n  if (!isIncomingMessage && isSend && isReceive && isRead) return \"read\";else if (!isIncomingMessage && isSend && isReceive) return \"received\";else if (!isIncomingMessage && isSend) return \"send\";else return \"not-send\";\n}\n\nexport default ListMessage;","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/HomePage/Body/RightSide/Chat/ListMessage/ListMessage.tsx"],"names":["Component","Message","ListMessage","props","render","file","id","messages","map","data","category","isIncomingMessage","message","isTransfered","taggedMessage","getMessageTime","dateTime","getMessageSendingStatus","isSend","isReceive","isRead","onTaggedMessage","onEnableDeletion","onShareMessage","Date","getTime","Math","random","datetime","time","split","to","lastIndexOf","substring"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAO,mBAAP;;;AAGA,MAAMC,WAAN,SAA0BF,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACnB,KAAKA,KADc;AAAA;;AAG/BC,EAAAA,MAAM,GAAE;AACJ,QAAIC,IAAY,GAAG;AACfC,MAAAA,EAAE,EAAE,CADW;AAEf,cAAQ,qDAFO;AAGf,cAAQ,KAHO;AAIf,iBAAW,CAJI;AAKf,sBAAgB,0BALD;AAMf,qBAAe;AANA,KAAnB,CADI,CASJ;;AACA,QAAIC,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAAX,CAAoBC,GAApB,CAAyBC,IAAD,iBAAqB,QAAC,OAAD;AAAkE,MAAA,QAAQ,EAAEA,IAAI,CAACC,QAAjF;AAA2F,MAAA,IAAI,EAAG,MAAlG;AACJ,MAAA,iBAAiB,EAAID,IAAI,CAACE,iBADtB;AAEJ,MAAA,OAAO,EAAIF,IAAI,CAACG,OAFZ;AAGJ,MAAA,IAAI,EAAIP,IAHJ;AAIJ,MAAA,YAAY,EAAII,IAAI,CAACI,YAJjB;AAKJ,MAAA,QAAQ,EAAI,IALR;AAMJ,MAAA,iBAAiB,EAAIJ,IAAI,CAACK,aANtB;AAOJ,MAAA,IAAI,EAAIC,cAAc,CAAE,GAAEN,IAAI,CAACO,QAAS,EAAlB,CAPlB;AAQJ,MAAA,MAAM,EAAIC,uBAAuB,CAACR,IAAI,CAACE,iBAAN,EAAyBF,IAAI,CAACS,MAA9B,EAAsCT,IAAI,CAACU,SAA3C,EAAsDV,IAAI,CAACW,MAA3D,CAR7B;AASJ,MAAA,eAAe,EAAI,KAAKjB,KAAL,CAAWkB,eAT1B;AAUJ,MAAA,gBAAgB,EAAI,KAAKlB,KAAL,CAAWmB,gBAV3B;AAWJ,MAAA,cAAc,EAAI,KAAKnB,KAAL,CAAWoB;AAXzB,OAAc,YAAa,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAZ,GAAqCC,IAAI,CAACC,MAAL,EAAnD;AAAA;AAAA;AAAA;AAAA,YAA7C,CAAf,CAVI,CAsBoD;;AACxD,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKpB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA/B8B;;AAkCnC,SAASQ,cAAT,CAAwBa,QAAxB,EAAyC;AACrC,MAAIC,IAAI,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoB,CAApB,EAAuBA,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CAAX;AACA,MAAIC,EAAE,GAAGF,IAAI,CAACG,WAAL,CAAiB,GAAjB,CAAT;AACA,SAAOH,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkBF,EAAlB,CAAP;AACH;;AAED,SAASd,uBAAT,CAAiCN,iBAAjC,EAA6DO,MAA7D,EAA6EC,SAA7E,EAAgGC,MAAhG,EACA;AACI,MAAG,CAACT,iBAAD,IAAsBO,MAAtB,IAAgCC,SAAhC,IAA6CC,MAAhD,EAAwD,OAAO,MAAP,CAAxD,KACK,IAAG,CAACT,iBAAD,IAAsBO,MAAtB,IAAgCC,SAAnC,EAA8C,OAAO,UAAP,CAA9C,KACA,IAAG,CAACR,iBAAD,IAAsBO,MAAzB,EAAiC,OAAO,MAAP,CAAjC,KACA,OAAO,UAAP;AACR;;AAED,eAAehB,WAAf","sourcesContent":["import { Component } from \"react\";\r\nimport Message from \"./Message/Message\";\r\n\r\nimport \"./ListMessage.css\"\r\nimport { MessageDTO, FileDTO } from \"../../../../../../shared/utils/Types\";\r\n\r\nclass ListMessage extends Component{\r\n    props:any = this.props\r\n\r\n    render(){\r\n        var file:FileDTO = {\r\n            id: 1,\r\n            \"name\": \"../../../../../../../wwwroot/images/kaput&zosky.jpg\",\r\n            \"size\": 19400,\r\n            \"purpose\": 0,\r\n            \"dateUploaded\": \"2021-10-05T22:22:35.093Z\",\r\n            \"dateDeleted\": \"2021-10-05T22:22:35.093Z\"\r\n        } \r\n        // {(data.file===\"\" || data.file === null)?\"text\":\"file\"} \r\n        let messages = this.props.messages.map((data:MessageDTO) => <Message key={\"message\" + (new Date()).getTime() + Math.random()} category={data.category} type = \"file\" \r\n                                                                isIncomingMessage = {data.isIncomingMessage}\r\n                                                                message = {data.message} \r\n                                                                file = {file}\r\n                                                                isTransfered = {data.isTransfered}\r\n                                                                isTagged = {true}\r\n                                                                taggetMessageData = {data.taggedMessage}\r\n                                                                time = {getMessageTime(`${data.dateTime}`)}  \r\n                                                                status = {getMessageSendingStatus(data.isIncomingMessage, data.isSend, data.isReceive, data.isRead)}\r\n                                                                onTaggedMessage = {this.props.onTaggedMessage}\r\n                                                                onEnableDeletion = {this.props.onEnableDeletion}\r\n                                                                onShareMessage = {this.props.onShareMessage}\r\n                                                             />)//isTagged = {data.isTagget}\r\n        return (\r\n            <div className=\"list-message\">\r\n                {messages}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction getMessageTime(datetime:string) {\r\n    let time = datetime.split(\"T\")[1].split('+')[0]\r\n    let to = time.lastIndexOf(\":\")\r\n    return time.substring(0, to);\r\n}\r\n\r\nfunction getMessageSendingStatus(isIncomingMessage: boolean, isSend:boolean, isReceive:boolean, isRead:boolean)\r\n{\r\n    if(!isIncomingMessage && isSend && isReceive && isRead) return \"read\"\r\n    else if(!isIncomingMessage && isSend && isReceive) return \"received\";\r\n    else if(!isIncomingMessage && isSend) return \"send\"\r\n    else return \"not-send\"\r\n}\r\n\r\nexport default ListMessage\r\n\r\n"]},"metadata":{},"sourceType":"module"}