{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\HomePage\\\\Body\\\\LeftSide\\\\ListConversation\\\\ListConversation.tsx\";\nimport { Component } from \"react\";\nimport \"./ListConversation.css\";\nimport Conversation from \"./Conversation/Conversation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListConversation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.element = null;\n    this.props = this.props;\n    this.state = {\n      prevSelectedConversation: this.element\n    };\n\n    this.setFocus = (event, id, email, name, category) => {\n      let prevSelectedConversation = this.state.prevSelectedConversation;\n      if (prevSelectedConversation !== null) prevSelectedConversation.classList.remove(\"selected-conversation\");\n      prevSelectedConversation = event.currentTarget;\n      prevSelectedConversation.classList.add(\"selected-conversation\");\n      this.setState({\n        prevSelectedConversation\n      });\n      this.props.openConversation(email, id, name, category);\n\n      try {} catch (error) {}\n    };\n  }\n\n  render() {\n    this.props.conversations.sort(data => new Date(data.datetime).getTime());\n    let discutionList = this.props.conversations.map(data => /*#__PURE__*/_jsxDEV(Conversation, {\n      onClick: event => this.setFocus(event, data.id, data.email, data.name, data.category),\n      data: data\n    }, data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 72\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-conversation\",\n      children: discutionList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListConversation;","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/HomePage/Body/LeftSide/ListConversation/ListConversation.tsx"],"names":["Component","Conversation","ListConversation","element","props","state","prevSelectedConversation","setFocus","event","id","email","name","category","classList","remove","currentTarget","add","setState","openConversation","error","render","conversations","sort","data","Date","datetime","getTime","discutionList","map"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAO,wBAAP;AAEA,OAAOC,YAAP,MAAyB,6BAAzB;;;AAEA,MAAMC,gBAAN,SAA+BF,SAA/B,CACA;AAAA;AAAA;AAAA,SAEIG,OAFJ,GAEkB,IAFlB;AAAA,SAGIC,KAHJ,GAGgB,KAAKA,KAHrB;AAAA,SAIIC,KAJJ,GAIY;AACJC,MAAAA,wBAAwB,EAAC,KAAKH;AAD1B,KAJZ;;AAAA,SAQII,QARJ,GAQe,CAACC,KAAD,EAAYC,EAAZ,EAA8BC,KAA9B,EAA4CC,IAA5C,EAAyDC,QAAzD,KAAoF;AAC3F,UAAIN,wBAAwB,GAAG,KAAKD,KAAL,CAAWC,wBAA1C;AACA,UAAGA,wBAAwB,KAAK,IAAhC,EACIA,wBAAwB,CAACO,SAAzB,CAAmCC,MAAnC,CAA0C,uBAA1C;AAEJR,MAAAA,wBAAwB,GAAGE,KAAK,CAACO,aAAjC;AACAT,MAAAA,wBAAwB,CAACO,SAAzB,CAAmCG,GAAnC,CAAuC,uBAAvC;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA;AAAD,OAAd;AAEA,WAAKF,KAAL,CAAWc,gBAAX,CAA4BR,KAA5B,EAAmCD,EAAnC,EAAuCE,IAAvC,EAA6CC,QAA7C;;AACA,UAAI,CACH,CADD,CACE,OAAOO,KAAP,EAAc,CAAE;AACrB,KApBL;AAAA;;AAsBIC,EAAAA,MAAM,GAAG;AACL,SAAKhB,KAAL,CAAWiB,aAAX,CAAyBC,IAAzB,CAAgCC,IAAD,IAAe,IAAIC,IAAJ,CAASD,IAAI,CAACE,QAAd,CAAD,CAA0BC,OAA1B,EAA7C;AACA,QAAIC,aAAa,GAAG,KAAKvB,KAAL,CAAWiB,aAAX,CAAyBO,GAAzB,CAA8BL,IAAD,iBAAc,QAAC,YAAD;AAA4B,MAAA,OAAO,EAAGf,KAAD,IAAe,KAAKD,QAAL,CAAcC,KAAd,EAAqBe,IAAI,CAACd,EAA1B,EAA8Bc,IAAI,CAACb,KAAnC,EAA0Ca,IAAI,CAACZ,IAA/C,EAAqDY,IAAI,CAACX,QAA1D,CAApD;AAAyH,MAAA,IAAI,EAAIW;AAAjI,OAAmBA,IAAI,CAACd,EAAxB;AAAA;AAAA;AAAA;AAAA,YAA3C,CAApB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACKkB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA9BL;;AAgCA,eAAezB,gBAAf","sourcesContent":["import { Component } from \"react\";\r\n\r\nimport \"./ListConversation.css\"\r\n\r\nimport Conversation from \"./Conversation/Conversation\";\r\n\r\nclass ListConversation extends Component\r\n{\r\n\r\n    element:any = null\r\n    props:any = this.props\r\n    state = {\r\n        prevSelectedConversation:this.element\r\n    }\r\n\r\n    setFocus = (event:any, id:number|string, email:string, name:string, category:number|string) => {\r\n        let prevSelectedConversation = this.state.prevSelectedConversation\r\n        if(prevSelectedConversation !== null )\r\n            prevSelectedConversation.classList.remove(\"selected-conversation\")\r\n        \r\n        prevSelectedConversation = event.currentTarget\r\n        prevSelectedConversation.classList.add(\"selected-conversation\")\r\n        this.setState({prevSelectedConversation})\r\n        \r\n        this.props.openConversation(email, id, name, category)\r\n        try {   \r\n        } catch (error) {}\r\n    }\r\n\r\n    render() {\r\n        this.props.conversations.sort( (data:any) => (new Date(data.datetime)).getTime())\r\n        let discutionList = this.props.conversations.map((data:any) => <Conversation key={data.id} onClick={(event:any) => this.setFocus(event, data.id, data.email, data.name, data.category)} data = {data}/>)\r\n        return (\r\n            <div className=\"list-conversation\">\r\n                {discutionList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ListConversation"]},"metadata":{},"sourceType":"module"}