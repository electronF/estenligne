{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\RegisterPage\\\\RegisterPage.tsx\";\nimport { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport PageName from \"../../shared/pagename/PageName\";\nimport { VerticalLogo } from \"../../shared/logo/Logos\";\nimport FormMessage from \"../../shared/formmessage/FormMessage\";\nimport RegisterForm from \"./RegisterForm/RegisterForm\";\nimport \"./RegisterPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.props = this.props;\n    this._alertMessage = \"Use either email or phone number\";\n    this._alertType = \"error\";\n    this.state = {\n      userName: \"\",\n      isRegister: false,\n      alertMessage: this._alertMessage,\n      alertType: this._alertType\n    };\n\n    this.successFunction = result => {\n      var keys = Object.keys(result);\n      if (keys.includes(\"id\")) this.setState({\n        isRegister: false,\n        alertType: 'success',\n        alertMessage: `Account is created and an ${result.email !== null ? \"email to your email adress\" : \"message to your phone number\"}`\n      });else this.setState({\n        isRegister: false,\n        alertType: 'error',\n        alertMessage: `Error!\\n${result}`\n      });\n    };\n\n    this.errorFunction = error => {\n      this.setState({\n        isRegister: false,\n        alertType: 'error',\n        alertMessage: `Something append wrong ${error}`\n      });\n    };\n\n    this.submitForm = data => {\n      var newData = {};\n      if (data.email !== null) newData = {\n        email: data.email,\n        password: data.password\n      };else newData = {\n        phoneNumber: data.phoneNumber,\n        password: data.password\n      };\n      this.submitFunction(\"https://www.estenligne.com:44364/api/Account/Register\", \"POST\", newData, this.successFunction, this.errorFunction);\n    };\n  }\n\n  submitFunction(url, type, data, successFunction, errorFunction) {\n    fetch(url, {\n      \"method\": type,\n      headers: {\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n      },\n      \"body\": JSON.stringify(data)\n    }).then(response => response.json()).then(result => {\n      successFunction(result);\n    }, error => {\n      errorFunction(error);\n    });\n  }\n\n  render() {\n    return this.state.isRegister ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(PageName, {\n          name: \"Register\"\n        }, \"register-page-name\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(VerticalLogo, {}, \"register-page-logo\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormMessage, {\n          type: this.state.alertType,\n          message: this.state.alertMessage\n        }, \"register-page-alert-message\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n          submitForm: this.submitForm\n        }, \"register-page-form\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"fs-5 fw-bold link-secondary\",\n          children: ['>>', \" Login \", '<<']\n        }, \"register-page-link\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 41\n    }, this);\n  }\n\n}\n\nexport default RegisterPage;","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/RegisterPage/RegisterPage.tsx"],"names":["Component","Link","Redirect","PageName","VerticalLogo","FormMessage","RegisterForm","RegisterPage","props","_alertMessage","_alertType","state","userName","isRegister","alertMessage","alertType","successFunction","result","keys","Object","includes","setState","email","errorFunction","error","submitForm","data","newData","password","phoneNumber","submitFunction","url","type","fetch","headers","JSON","stringify","then","response","json","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport PageName from \"../../shared/pagename/PageName\";\r\nimport { VerticalLogo } from \"../../shared/logo/Logos\";\r\nimport FormMessage from \"../../shared/formmessage/FormMessage\";\r\nimport RegisterForm from \"./RegisterForm/RegisterForm\";\r\n\r\nimport \"./RegisterPage.css\"\r\nimport { Credential } from \"../../shared/utils/Types\";\r\n\r\nclass RegisterPage extends Component{\r\n    props:any = this.props\r\n    _alertMessage = \"Use either email or phone number\"\r\n    _alertType = \"error\"\r\n    state = {\r\n        userName:\"\",\r\n        isRegister: false,\r\n        alertMessage: this._alertMessage,\r\n        alertType: this._alertType\r\n    }\r\n\r\n    successFunction = (result:any) =>\r\n    {\r\n        var keys = Object.keys(result)\r\n        if(keys.includes(\"id\"))\r\n            this.setState({isRegister: false, alertType : 'success',  alertMessage: `Account is created and an ${(result.email !== null)?\"email to your email adress\":\"message to your phone number\"}`})\r\n        else\r\n            this.setState({isRegister: false, alertType : 'error',  alertMessage: `Error!\\n${result}`})\r\n    }\r\n\r\n    errorFunction = (error:any) =>\r\n    {\r\n        this.setState({isRegister: false, alertType : 'error',  alertMessage: `Something append wrong ${error}`})\r\n    }\r\n\r\n    submitFunction(url:string, type:string, data:any, successFunction:Function, errorFunction:Function)\r\n    {\r\n        fetch(url, {\r\n            \"method\": type,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'accept': 'application/json'\r\n            },\r\n            \"body\": JSON.stringify(data)\r\n            }).then(response => response.json())\r\n            .then(\r\n                (result) => {\r\n                    successFunction(result)\r\n                },\r\n                (error) => {\r\n                    errorFunction(error)\r\n                }\r\n            );\r\n    }\r\n\r\n    submitForm = (data:Credential) => {\r\n        var newData = {}\r\n        if(data.email !== null)\r\n            newData = {email: data.email,  password:data.password} \r\n        else \r\n            newData = { phoneNumber: data.phoneNumber, password:data.password} \r\n        this.submitFunction(\"https://www.estenligne.com:44364/api/Account/Register\", \"POST\", newData, this.successFunction, this.errorFunction)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            (this.state.isRegister)?\r\n            (<Redirect to = \"login\"/>):(<div className = \"register-page\" >\r\n                <div className = \"title\">\r\n                    <PageName name = \"Register\" key = \"register-page-name\"/>    \r\n                </div>\r\n                \r\n                <div className = \"content\">\r\n                    <VerticalLogo key = \"register-page-logo\"/>\r\n                    <FormMessage type={this.state.alertType} message = {this.state.alertMessage} key = \"register-page-alert-message\"/>\r\n                    <RegisterForm submitForm = {this.submitForm} key = \"register-page-form\" />\r\n                    <Link to=\"/login\" key = \"register-page-link\" className=\"fs-5 fw-bold link-secondary\">{'>>'} Login {'<<'}</Link>\r\n                </div>\r\n            </div>)\r\n        )    \r\n    }\r\n}\r\n\r\nexport default RegisterPage"]},"metadata":{},"sourceType":"module"}