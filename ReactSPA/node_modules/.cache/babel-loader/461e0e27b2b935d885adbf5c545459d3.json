{"ast":null,"code":"function validateEmail(text) {\n  let exp = /^([a-zA-Z0-9_\\-.]+)@((\\[\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.)|(([a-zA-Z0-9-]+\\.)+))([a-zA-Z]{2,4}|\\d{1,3})(\\]?)$/;\n  return exp.test(text);\n}\n\nfunction validatePassword(text) {\n  return text.length >= 6;\n}\n\nfunction formatDate(strDate) {\n  var current = new Date();\n  var old = Date.parse(strDate);\n  var diff = current.getTime() - old;\n  var daysMs = 1000 * 60 * 60 * 24;\n  var hoursMs = 1000 * 60 * 60;\n  var minutesMs = 1000 * 60 * 60;\n  var days = diff / daysMs;\n  days = days - days % 1;\n  diff %= daysMs;\n  var hours = diff / hoursMs;\n  hours = hours - hours % 1;\n  diff %= hoursMs;\n  var minutes = diff / minutesMs;\n  minutes = minutes - minutes % 1;\n\n  if (days > 7) {\n    var date = new Date(old);\n    return `${date.getDay()}/${date.getMonth()}/${date.getFullYear()}`;\n  } else if (days > 0) {\n    var weeks = {\n      1: \"Monday\",\n      2: \"Tuesday\",\n      3: \"Wednesday\",\n      4: \"Thursday\",\n      5: \"Friday\",\n      6: \"Saturday\",\n      7: \"Sunday\"\n    };\n\n    var _diff = current.getDay() - days;\n\n    _diff = _diff <= 0 ? 7 + _diff : _diff;\n    return `${weeks[_diff]}`;\n  } else return `${hours}h${minutes}`;\n}\n\nfunction convert2TwoDigitsNumber(value) {}\n/**\r\n * return the seonds formated in time hh:mm:ss\r\n * @param seconds  the number of Seconds\r\n * @returns \r\n */\n\n\nfunction seconds2Time(seconds) {\n  var hours = seconds / 3600;\n  hours -= hours % 1;\n  seconds -= hours * 3600;\n  var minutes = seconds / 60;\n  minutes -= minutes % 1;\n  seconds -= minutes * 60;\n  return `${convert2TwoDigitsNumber(hours)}:${convert2TwoDigitsNumber(minutes)}:${convert2TwoDigitsNumber(seconds)}`;\n}\n\nfunction getMediaType(text) {\n  var videoExtension = [\"mp4\", \"mov\", \"wmv\", \"avi\", \"avi\", \"avchd\", \"flv\", \"f4v\", \"swf\", \"mkv\", \"webm\", \"mpeg\", \"amv\", \"3gp\", \"3gp\", \"html5\"];\n  var audioExtension = [\"mp3\", \"ogg\", \"wav\"];\n  var imageExtension = [\"bmp\", \"gif\", \"jpg\", \"jpeg\", \"png\", \"tif\", \"tiff\", \"raw\", \"eps\", \"cr2\", \"nef\", \"orf\", \"sr2\"];\n  var docExtension = [\"txt\", \"pdf\", \"doc\", \"docx\", \"ppt\", \"pptx\", \"xls\", \"csv\"];\n  var lastDotPosition = text.lastIndexOf('.');\n  var ext = \"\"; //text\n\n  if (lastDotPosition > -1) {\n    ext = text.substring(lastDotPosition + 1);\n    if (videoExtension.includes(ext)) return `video/${ext}`;else if (audioExtension.includes(ext)) return `audio/${ext}`;else if (imageExtension.includes(ext)) return `image/${ext}`;else if (docExtension.includes(ext)) return `application/${ext}`;\n  }\n\n  return `unknow/${ext}`;\n}\n\nfunction getFileSize(size) {\n  var oneKiloOctects = 1024;\n  var onMegaOctects = 1024 * 1024;\n  var megaOctects = Math.floor(size / onMegaOctects);\n  return megaOctects > 0 ? `${Math.round(megaOctects * 10) / 10}MO` : `${Math.ceil(size / oneKiloOctects)}KO`;\n}\n\nfunction validateNumber(text) {\n  let exp = /^((00)|(\\+\\d+))?(\\d{6,})$/;\n  return exp.test(text);\n}\n/**\r\n * \r\n * @param url the url\r\n * @param type the type of query POST, GET, PUT, DELETE\r\n * @param data Key value object\r\n * @param successFunction Success function\r\n * @param errorFunction Error function\r\n */\n\n\nfunction requestWithBody(url, type, data, token, successFunction, errorFunction) {\n  fetch(url, {\n    \"method\": type,\n    \"headers\": {\n      \"content-type\": \"application/json\",\n      \"accept\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    \"body\": JSON.stringify(data)\n  }).then(response => response.json()).then(result => {\n    successFunction(result);\n  }, error => {\n    errorFunction(error);\n  });\n}\n/**\r\n * \r\n * @param url the endpoint where to send data\r\n * @param type the type of query GET, DELETE\r\n * @param successFunction Success function\r\n * @param errorFunction Error function\r\n */\n\n\nfunction requestWithoutBody(url, type, token, successFunction, errorFunction) {\n  fetch(url, {\n    \"method\": type,\n    \"headers\": {\n      \"content-type\": \"application/json\",\n      \"accept\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(response => response.json()).then(result => {\n    successFunction(result);\n  }, error => {\n    errorFunction(error);\n  });\n}\n\nfunction getMessageTime(datetime) {\n  let time = datetime.split(\"T\")[1].split('+')[0];\n  let to = time.lastIndexOf(\":\");\n  return time.substring(0, to);\n}\n\nexport { validateEmail, validateNumber, validatePassword, getMediaType, getFileSize, requestWithBody, requestWithoutBody, formatDate, getMessageTime, convert2TwoDigitsNumber, seconds2Time };","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/shared/utils/functions.tsx"],"names":["validateEmail","text","exp","test","validatePassword","length","formatDate","strDate","current","Date","old","parse","diff","getTime","daysMs","hoursMs","minutesMs","days","hours","minutes","date","getDay","getMonth","getFullYear","weeks","_diff","convert2TwoDigitsNumber","value","seconds2Time","seconds","getMediaType","videoExtension","audioExtension","imageExtension","docExtension","lastDotPosition","lastIndexOf","ext","substring","includes","getFileSize","size","oneKiloOctects","onMegaOctects","megaOctects","Math","floor","round","ceil","validateNumber","requestWithBody","url","type","data","token","successFunction","errorFunction","fetch","JSON","stringify","then","response","json","result","error","requestWithoutBody","getMessageTime","datetime","time","split","to"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,IAAvB,EACA;AACI,MAAIC,GAAG,GAAG,yGAAV;AACA,SAAOA,GAAG,CAACC,IAAJ,CAASF,IAAT,CAAP;AACH;;AAED,SAASG,gBAAT,CAA0BH,IAA1B,EACA;AACI,SAAOA,IAAI,CAACI,MAAL,IAAe,CAAtB;AACH;;AAED,SAASC,UAAT,CAAoBC,OAApB,EACA;AACI,MAAIC,OAAO,GAAI,IAAIC,IAAJ,EAAf;AACA,MAAIC,GAAG,GAAGD,IAAI,CAACE,KAAL,CAAWJ,OAAX,CAAV;AACA,MAAIK,IAAI,GAAGJ,OAAO,CAACK,OAAR,KAAoBH,GAA/B;AAEA,MAAII,MAAM,GAAG,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAxB;AACA,MAAIC,OAAO,GAAG,OAAK,EAAL,GAAQ,EAAtB;AACA,MAAIC,SAAS,GAAG,OAAK,EAAL,GAAQ,EAAxB;AAEA,MAAIC,IAAI,GAAGL,IAAI,GAACE,MAAhB;AACAG,EAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAI,GAAC,CAAnB;AACAL,EAAAA,IAAI,IAAIE,MAAR;AAEA,MAAII,KAAK,GAAGN,IAAI,GAACG,OAAjB;AACAG,EAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAK,GAAC,CAAtB;AACAN,EAAAA,IAAI,IAAIG,OAAR;AAEA,MAAII,OAAO,GAAGP,IAAI,GAACI,SAAnB;AACAG,EAAAA,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAC,CAA5B;;AAEA,MAAGF,IAAI,GAAG,CAAV,EACA;AACI,QAAIG,IAAI,GAAG,IAAIX,IAAJ,CAASC,GAAT,CAAX;AACA,WAAQ,GAAEU,IAAI,CAACC,MAAL,EAAc,IAAGD,IAAI,CAACE,QAAL,EAAgB,IAAGF,IAAI,CAACG,WAAL,EAAmB,EAAjE;AACH,GAJD,MAKK,IAAIN,IAAI,GAAG,CAAX,EACL;AACI,QAAIO,KAAS,GAAG;AAAC,SAAG,QAAJ;AAAc,SAAE,SAAhB;AAA2B,SAAG,WAA9B;AAA2C,SAAE,UAA7C;AAAyD,SAAG,QAA5D;AAAsE,SAAE,UAAxE;AAAoF,SAAE;AAAtF,KAAhB;;AACA,QAAIC,KAAK,GAAGjB,OAAO,CAACa,MAAR,KAAmBJ,IAA/B;;AACAQ,IAAAA,KAAK,GAAIA,KAAK,IAAI,CAAV,GAAa,IAAIA,KAAjB,GAAuBA,KAA/B;AACA,WAAQ,GAAED,KAAK,CAACC,KAAD,CAAQ,EAAvB;AACH,GANI,MAQD,OAAQ,GAAEP,KAAM,IAAGC,OAAQ,EAA3B;AACP;;AAGD,SAASO,uBAAT,CAAiCC,KAAjC,EACA,CAEC;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASC,YAAT,CAAsBC,OAAtB,EACA;AACI,MAAIX,KAAK,GAAGW,OAAO,GAAG,IAAtB;AACAX,EAAAA,KAAK,IAAIA,KAAK,GAAC,CAAf;AAEAW,EAAAA,OAAO,IAAIX,KAAK,GAAG,IAAnB;AAEA,MAAIC,OAAO,GAAGU,OAAO,GAAG,EAAxB;AACAV,EAAAA,OAAO,IAAIA,OAAO,GAAC,CAAnB;AAEAU,EAAAA,OAAO,IAAIV,OAAO,GAAG,EAArB;AAEA,SAAQ,GAAEO,uBAAuB,CAACR,KAAD,CAAQ,IAAGQ,uBAAuB,CAACP,OAAD,CAAU,IAAGO,uBAAuB,CAACG,OAAD,CAAU,EAAjH;AACH;;AAED,SAASC,YAAT,CAAsB7B,IAAtB,EACA;AACI,MAAI8B,cAAc,GAAG,CACjB,KADiB,EACV,KADU,EACH,KADG,EACI,KADJ,EAEjB,KAFiB,EAEV,OAFU,EAED,KAFC,EAEM,KAFN,EAGjB,KAHiB,EAGV,KAHU,EAGH,MAHG,EAGK,MAHL,EAIjB,KAJiB,EAIV,KAJU,EAIH,KAJG,EAII,OAJJ,CAArB;AAOA,MAAIC,cAAc,GAAG,CACjB,KADiB,EACV,KADU,EACH,KADG,CAArB;AAIA,MAAIC,cAAc,GAAG,CACjB,KADiB,EACV,KADU,EACH,KADG,EACI,MADJ,EAEjB,KAFiB,EAEV,KAFU,EAEH,MAFG,EAEK,KAFL,EAGjB,KAHiB,EAGV,KAHU,EAGH,KAHG,EAGI,KAHJ,EAIjB,KAJiB,CAArB;AAOA,MAAIC,YAAY,GAAG,CACf,KADe,EACR,KADQ,EACD,KADC,EACK,MADL,EAEf,KAFe,EAER,MAFQ,EAEA,KAFA,EAEO,KAFP,CAAnB;AAKA,MAAIC,eAAe,GAAGlC,IAAI,CAACmC,WAAL,CAAiB,GAAjB,CAAtB;AACA,MAAIC,GAAG,GAAG,EAAV,CAzBJ,CAyBgB;;AACZ,MAAGF,eAAe,GAAG,CAAC,CAAtB,EACA;AACIE,IAAAA,GAAG,GAAGpC,IAAI,CAACqC,SAAL,CAAeH,eAAe,GAAG,CAAjC,CAAN;AACA,QAAGJ,cAAc,CAACQ,QAAf,CAAwBF,GAAxB,CAAH,EACI,OAAQ,SAAQA,GAAI,EAApB,CADJ,KAEK,IAAIL,cAAc,CAACO,QAAf,CAAwBF,GAAxB,CAAJ,EACD,OAAQ,SAAQA,GAAI,EAApB,CADC,KAEA,IAAGJ,cAAc,CAACM,QAAf,CAAwBF,GAAxB,CAAH,EACD,OAAQ,SAAQA,GAAI,EAApB,CADC,KAEA,IAAIH,YAAY,CAACK,QAAb,CAAsBF,GAAtB,CAAJ,EACD,OAAQ,eAAcA,GAAI,EAA1B;AACP;;AACD,SAAQ,UAASA,GAAI,EAArB;AACH;;AAED,SAASG,WAAT,CAAqBC,IAArB,EACA;AACI,MAAIC,cAAc,GAAG,IAArB;AACA,MAAIC,aAAa,GAAG,OAAO,IAA3B;AAEA,MAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAI,GAAGE,aAAlB,CAAlB;AACA,SAASC,WAAW,GAAC,CAAb,GAAkB,GAAEC,IAAI,CAACE,KAAL,CAAWH,WAAW,GAAG,EAAzB,IAA6B,EAAG,IAApD,GAA2D,GAAEC,IAAI,CAACG,IAAL,CAAUP,IAAI,GAAGC,cAAjB,CAAiC,IAAtG;AACH;;AAED,SAASO,cAAT,CAAwBhD,IAAxB,EACA;AACI,MAAIC,GAAG,GAAG,2BAAV;AACA,SAAOA,GAAG,CAACC,IAAJ,CAASF,IAAT,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,SAASiD,eAAT,CAAyBC,GAAzB,EAAqCC,IAArC,EAAkDC,IAAlD,EAA+DC,KAA/D,EAA6EC,eAA7E,EAAuGC,aAAvG,EACA;AACIC,EAAAA,KAAK,CAACN,GAAD,EAAM;AACP,cAAUC,IADH;AAEP,eAAW;AACP,sBAAgB,kBADT;AAEP,gBAAU,kBAFH;AAGP,uBAAkB,UAASE,KAAM;AAH1B,KAFJ;AAOP,YAAQI,IAAI,CAACC,SAAL,CAAeN,IAAf;AAPD,GAAN,CAAL,CAQOO,IARP,CAQYC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARxB,EASKF,IATL,CAUSG,MAAD,IAAY;AACTR,IAAAA,eAAe,CAACQ,MAAD,CAAf;AACF,GAZT,EAaSC,KAAD,IAAW;AACRR,IAAAA,aAAa,CAACQ,KAAD,CAAb;AACF,GAfT;AAiBH;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,SAASC,kBAAT,CAA4Bd,GAA5B,EAAwCC,IAAxC,EAAqDE,KAArD,EAAmEC,eAAnE,EAA6FC,aAA7F,EACA;AACIC,EAAAA,KAAK,CAACN,GAAD,EAAM;AACP,cAAUC,IADH;AAEP,eAAW;AACP,sBAAgB,kBADT;AAEP,gBAAU,kBAFH;AAGP,uBAAkB,UAASE,KAAM;AAH1B;AAFJ,GAAN,CAAL,CAOOM,IAPP,CAOYC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPxB,EAQKF,IARL,CASSG,MAAD,IAAY;AACTR,IAAAA,eAAe,CAACQ,MAAD,CAAf;AACF,GAXT,EAYSC,KAAD,IAAW;AACRR,IAAAA,aAAa,CAACQ,KAAD,CAAb;AACF,GAdT;AAgBH;;AAED,SAASE,cAAT,CAAwBC,QAAxB,EAAyC;AACtC,MAAIC,IAAI,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoB,CAApB,EAAuBA,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CAAX;AACA,MAAIC,EAAE,GAAGF,IAAI,CAAChC,WAAL,CAAiB,GAAjB,CAAT;AACA,SAAOgC,IAAI,CAAC9B,SAAL,CAAe,CAAf,EAAkBgC,EAAlB,CAAP;AACH;;AAGD,SAAQtE,aAAR,EAAuBiD,cAAvB,EAAuC7C,gBAAvC,EAAyD0B,YAAzD,EAAuEU,WAAvE,EAAoFU,eAApF,EAAqGe,kBAArG,EAAyH3D,UAAzH,EAAqI4D,cAArI,EAAqJxC,uBAArJ,EAA8KE,YAA9K","sourcesContent":["function validateEmail(text:string) \r\n{\r\n    let exp = /^([a-zA-Z0-9_\\-.]+)@((\\[\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.)|(([a-zA-Z0-9-]+\\.)+))([a-zA-Z]{2,4}|\\d{1,3})(\\]?)$/\r\n    return exp.test(text)\r\n}\r\n\r\nfunction validatePassword(text:string)\r\n{\r\n    return text.length >= 6\r\n}\r\n\r\nfunction formatDate(strDate:string)\r\n{\r\n    var current =  new Date()\r\n    var old = Date.parse(strDate)\r\n    var diff = current.getTime() - old\r\n\r\n    var daysMs = 1000*60*60*24\r\n    var hoursMs = 1000*60*60\r\n    var minutesMs = 1000*60*60\r\n    \r\n    var days = diff/daysMs\r\n    days = days - days%1\r\n    diff %= daysMs\r\n\r\n    var hours = diff/hoursMs\r\n    hours = hours - hours%1\r\n    diff %= hoursMs\r\n\r\n    var minutes = diff/minutesMs\r\n    minutes = minutes - minutes%1\r\n\r\n    if(days > 7)\r\n    {\r\n        var date = new Date(old)\r\n        return `${date.getDay()}/${date.getMonth()}/${date.getFullYear()}`\r\n    }\r\n    else if( days > 0)\r\n    {\r\n        var weeks:any = {1: \"Monday\", 2:\"Tuesday\", 3: \"Wednesday\", 4:\"Thursday\", 5: \"Friday\", 6:\"Saturday\", 7:\"Sunday\"}\r\n        var _diff = current.getDay() - days\r\n        _diff = (_diff <= 0)?7 + _diff:_diff\r\n        return `${weeks[_diff]}`\r\n    }\r\n    else\r\n        return `${hours}h${minutes}`\r\n}\r\n\r\n\r\nfunction convert2TwoDigitsNumber(value:number)\r\n{\r\n\r\n}\r\n\r\n/**\r\n * return the seonds formated in time hh:mm:ss\r\n * @param seconds  the number of Seconds\r\n * @returns \r\n */\r\nfunction seconds2Time(seconds:number)\r\n{\r\n    var hours = seconds / 3600\r\n    hours -= hours%1\r\n\r\n    seconds -= hours * 3600\r\n    \r\n    var minutes = seconds / 60\r\n    minutes -= minutes%1\r\n\r\n    seconds -= minutes * 60\r\n\r\n    return `${convert2TwoDigitsNumber(hours)}:${convert2TwoDigitsNumber(minutes)}:${convert2TwoDigitsNumber(seconds)}`\r\n}\r\n\r\nfunction getMediaType(text:string)\r\n{\r\n    var videoExtension = [\r\n        \"mp4\", \"mov\", \"wmv\", \"avi\",\r\n        \"avi\", \"avchd\", \"flv\", \"f4v\",\r\n        \"swf\", \"mkv\", \"webm\", \"mpeg\",\r\n        \"amv\", \"3gp\", \"3gp\", \"html5\"\r\n        ]\r\n\r\n    var audioExtension = [\r\n        \"mp3\", \"ogg\", \"wav\", \r\n    ]\r\n\r\n    var imageExtension = [\r\n        \"bmp\", \"gif\", \"jpg\", \"jpeg\",\r\n        \"png\", \"tif\", \"tiff\", \"raw\",\r\n        \"eps\", \"cr2\", \"nef\", \"orf\",\r\n        \"sr2\"\r\n    ]\r\n\r\n    var docExtension = [\r\n        \"txt\", \"pdf\", \"doc\",\"docx\",\r\n        \"ppt\", \"pptx\", \"xls\", \"csv\"\r\n    ]\r\n\r\n    var lastDotPosition = text.lastIndexOf('.')\r\n    var ext = \"\"//text\r\n    if(lastDotPosition > -1)\r\n    {\r\n        ext = text.substring(lastDotPosition + 1)\r\n        if(videoExtension.includes(ext))\r\n            return `video/${ext}`\r\n        else if (audioExtension.includes(ext))\r\n            return `audio/${ext}`\r\n        else if(imageExtension.includes(ext))\r\n            return `image/${ext}`\r\n        else if (docExtension.includes(ext))\r\n            return `application/${ext}`\r\n    }\r\n    return `unknow/${ext}`\r\n}\r\n\r\nfunction getFileSize(size:number)\r\n{\r\n    var oneKiloOctects = 1024 \r\n    var onMegaOctects = 1024 * 1024\r\n\r\n    var megaOctects = Math.floor(size / onMegaOctects)\r\n    return ((megaOctects>0)?(`${Math.round(megaOctects * 10)/10}MO`):(`${Math.ceil(size / oneKiloOctects)}KO`))\r\n}\r\n\r\nfunction validateNumber(text:string) \r\n{\r\n    let exp = /^((00)|(\\+\\d+))?(\\d{6,})$/\r\n    return exp.test(text)\r\n}\r\n\r\n/**\r\n * \r\n * @param url the url\r\n * @param type the type of query POST, GET, PUT, DELETE\r\n * @param data Key value object\r\n * @param successFunction Success function\r\n * @param errorFunction Error function\r\n */\r\n function requestWithBody(url:string, type:string, data:Object, token:string, successFunction:Function, errorFunction:Function)\r\n {    \r\n     fetch(url, {\r\n         \"method\": type,\r\n         \"headers\": {\r\n             \"content-type\": \"application/json\",\r\n             \"accept\": \"application/json\",\r\n             \"Authorization\": `Bearer ${token}`\r\n         },\r\n         \"body\": JSON.stringify(data)\r\n         }).then(response => response.json())\r\n         .then(\r\n             (result) => {\r\n                successFunction(result)\r\n             },\r\n             (error) => {\r\n                errorFunction(error)\r\n             }\r\n         );\r\n }\r\n\r\n \r\n/**\r\n * \r\n * @param url the endpoint where to send data\r\n * @param type the type of query GET, DELETE\r\n * @param successFunction Success function\r\n * @param errorFunction Error function\r\n */\r\n function requestWithoutBody(url:string, type:string, token:string, successFunction:Function, errorFunction:Function)\r\n {    \r\n     fetch(url, {\r\n         \"method\": type,\r\n         \"headers\": {\r\n             \"content-type\": \"application/json\",\r\n             \"accept\": \"application/json\",\r\n             \"Authorization\": `Bearer ${token}`\r\n         },\r\n         }).then(response => response.json())\r\n         .then(\r\n             (result) => {\r\n                successFunction(result)\r\n             },\r\n             (error) => {\r\n                errorFunction(error)\r\n             }\r\n    );\r\n }\r\n\r\n function getMessageTime(datetime:string) {\r\n    let time = datetime.split(\"T\")[1].split('+')[0]\r\n    let to = time.lastIndexOf(\":\")\r\n    return time.substring(0, to);\r\n}\r\n\r\n\r\nexport {validateEmail, validateNumber, validatePassword, getMediaType, getFileSize, requestWithBody, requestWithoutBody, formatDate, getMessageTime, convert2TwoDigitsNumber, seconds2Time}"]},"metadata":{},"sourceType":"module"}