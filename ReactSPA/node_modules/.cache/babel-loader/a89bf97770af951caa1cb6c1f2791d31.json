{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\HomePage\\\\Body\\\\LeftSide\\\\LeftSide.tsx\";\nimport { Component } from \"react\";\nimport ActionBar from \"./ActionBar/ActionBar\";\nimport ListConversation from './ListConversation/ListConversation';\nimport add from \"./../../../../../wwwroot/images/plus_white.png\";\nimport NewMessage from './NewMessage/NewMessage';\nimport NewGroup from './NewGroup/NewGroup';\nimport NewPrivateChat from './NewPrivateChat/NewPrivateChat';\nimport Cookies from \"universal-cookie/es6\";\nimport { requestWithoutBody } from \"../../../../shared/utils/functions\";\nimport settings from \"./../../../../../settings.json\";\nimport './LeftSide.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass LeftSide extends Component {\n  constructor(...args) {\n    super(...args);\n    this.cookies = new Cookies();\n    this.settings = settings;\n    this.props = this.props;\n    this._users = [];\n    this._conversations = [];\n    this.state = {\n      conversations: this._conversations,\n      typeConversationIsOpen: false,\n      moreConversationIsDisplayed: false,\n      newSenderIsChoose: false,\n      alertUserFound: \"\",\n      currentDisplayedPage: \"conversation\"\n    };\n\n    this.openTypeConversatons = event => {\n      event.currentTarget.style.setProperty(\"transition\", \"all linear .05s\");\n      if (this.state.typeConversationIsOpen === false) event.currentTarget.style.setProperty(\"rotate\", \"45deg\");else event.currentTarget.style.setProperty(\"rotate\", \"0deg\");\n      this.setState({\n        typeConversationIsOpen: !this.state.typeConversationIsOpen,\n        moreConversationIsDisplayed: !this.state.typeConversationIsOpen,\n        currentDisplayedPage: \"conversation\"\n      });\n    };\n\n    this.createPrivateChatRoom = (email, phoneNumber, chatRoomId = -1) => {\n      var toSend = \"\";\n      if (email !== null && email.trim().toLowerCase().length > 0) toSend = `emailAdress=${email}`;else if (phoneNumber !== null && phoneNumber.trim().length > 0 && email === null) toSend = `phoneNumber=${phoneNumber}`;else if (chatRoomId !== \"\" && chatRoomId > -1) toSend = `userProfileId=${phoneNumber}`;\n\n      if (toSend !== \"\") {\n        console.log(\"Sending request\");\n        requestWithoutBody(`${settings.host}/api/ChatRoom/CreatePrivate?${toSend}`, \"POST\", this.cookies.get(\"token\"), this.sucessFunction, this.errorFunction);\n      } else console.log('error');\n    };\n\n    this.sucessFunction = result => {\n      console.log(\"inside success function\");\n      var keys = Object.keys(result);\n\n      if (keys.includes('chatRoomId')) {\n        var _elements$item;\n\n        var identity = result.userProfile.identity;\n        var name = result.userProfile.username;\n        var id = result.userProfile.id;\n        var userChatRoomId = result.id;\n        this.props.openConversation(identity, id, userChatRoomId, name, \"person\");\n        let elements = document.getElementsByClassName(\"new-conversation\");\n        if (elements.length >= 0) (_elements$item = elements.item(0)) === null || _elements$item === void 0 ? void 0 : _elements$item.setAttribute(\"style\", \"rotate:0deg;\"); //?.style.setProperty(\"rotate\", \"0deg\")\n\n        this.setState({\n          typeConversationIsOpen: !this.state.typeConversationIsOpen,\n          moreConversationIsDisplayed: !this.state.typeConversationIsOpen,\n          currentDisplayedPage: \"conversation\"\n        });\n      } else this.setState({\n        alertUserFound: `Error! something happen wrong ${result}`\n      });\n    };\n\n    this.errorFunction = error => {\n      this.setState({\n        alertUserFound: `Error! ${error}`\n      });\n    };\n\n    this.newMessage = event => {\n      this.setState({\n        moreConversationIsDisplayed: false,\n        currentDisplayedPage: \"newMessagePage\"\n      });\n    };\n\n    this.newGroup = event => {\n      this.setState({\n        moreConversationIsDisplayed: false,\n        currentDisplayedPage: \"newGroupPage\"\n      });\n    };\n\n    this.newChatRoom = event => {\n      this.setState({\n        moreConversationIsDisplayed: false,\n        currentDisplayedPage: \"newPrivateChatRoom\"\n      });\n    };\n\n    this.submitForm = data => {\n      let user = this.getData(`${data.email}`.toLocaleLowerCase().trim(), `${data.phoneNumber}`.toLocaleLowerCase().trim(), \"\");\n      if ((data.email !== null || data.phoneNumber != null) && data.password !== \"\") this.setState({\n        newSenderIsChoose: true\n      });\n      let isEmail = data.email !== undefined && data.email !== \"\";\n      if (user === undefined) this.setState({\n        alertUserFound: `No user found with this ${isEmail ? \"email\" : \"phone number\"}`\n      });else {\n        try {\n          console.log('Request to create chat room');\n          this.createPrivateChatRoom(data.email, data.phoneNumber);\n        } catch (error) {}\n      }\n    };\n\n    this.handleChange = () => {\n      this.setState({\n        alertUserFound: \"\"\n      });\n    };\n  }\n\n  getData(email = \"\", phone = \"\", id = \"\") {\n    return {\n      id: \"\",\n      identity: email !== null && email !== void 0 ? email : phone,\n      name: email || phone,\n      category: \"person\",\n      image: \"\"\n    }; // return this._users.find((d) => (d.email === email) || (d.id === id) || (d.phoneNumber === phone))\n  }\n\n  render() {\n    let newPage = {\n      \"newMessagePage\": /*#__PURE__*/_jsxDEV(NewMessage, {\n        handleChange: this.handleChange,\n        alertMessage: this.state.alertUserFound,\n        submitForm: this.submitForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 41\n      }, this),\n      \"newGroupPage\": /*#__PURE__*/_jsxDEV(NewGroup, {\n        submitForm: this.submitForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 181\n      }, this),\n      \"newPrivateChatRoom\": /*#__PURE__*/_jsxDEV(NewPrivateChat, {\n        submitForm: this.submitForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 246\n      }, this)\n    }[this.state.currentDisplayedPage];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: [newPage !== null && newPage !== undefined ? newPage : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ActionBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-list\",\n          children: /*#__PURE__*/_jsxDEV(ListConversation, {\n            conversations: this.state.conversations,\n            openConversation: this.props.openConversation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-conversations\",\n        children: [this.state.moreConversationIsDisplayed ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-conversations\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: this.newMessage,\n            children: \" New message \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: this.newGroup,\n            children: \" New groupe \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: this.newChatRoom,\n            children: \" Private tchat room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 64\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-conversation\",\n          onClick: this.openTypeConversatons,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: add,\n            alt: \"new\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LeftSide;","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/HomePage/Body/LeftSide/LeftSide.tsx"],"names":["Component","ActionBar","ListConversation","add","NewMessage","NewGroup","NewPrivateChat","Cookies","requestWithoutBody","settings","LeftSide","cookies","props","_users","_conversations","state","conversations","typeConversationIsOpen","moreConversationIsDisplayed","newSenderIsChoose","alertUserFound","currentDisplayedPage","openTypeConversatons","event","currentTarget","style","setProperty","setState","createPrivateChatRoom","email","phoneNumber","chatRoomId","toSend","trim","toLowerCase","length","console","log","host","get","sucessFunction","errorFunction","result","keys","Object","includes","identity","userProfile","name","username","id","userChatRoomId","openConversation","elements","document","getElementsByClassName","item","setAttribute","error","newMessage","newGroup","newChatRoom","submitForm","data","user","getData","toLocaleLowerCase","password","isEmail","undefined","handleChange","phone","category","image","render","newPage"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport ActionBar from \"./ActionBar/ActionBar\";\r\nimport ListConversation from './ListConversation/ListConversation';\r\nimport { Credential, UserProfile, ConversationDTO } from \"../../../../shared/utils/Types\";\r\nimport add from \"./../../../../../wwwroot/images/plus_white.png\"\r\nimport NewMessage from './NewMessage/NewMessage';\r\nimport NewGroup from './NewGroup/NewGroup';\r\nimport NewPrivateChat from './NewPrivateChat/NewPrivateChat';\r\nimport Cookies from \"universal-cookie/es6\";\r\nimport { requestWithBody, requestWithoutBody } from \"../../../../shared/utils/functions\";\r\nimport settings from \"./../../../../../settings.json\";\r\n\r\nimport './LeftSide.css'\r\n\r\n\r\nclass LeftSide extends Component{\r\n\r\n\r\n    cookies =  new Cookies()\r\n    settings = settings\r\n    props:any = this.props\r\n    _users: UserProfile[] = []\r\n    _conversations:ConversationDTO[] = []\r\n    state = {\r\n        conversations: this._conversations ,\r\n        typeConversationIsOpen : false,\r\n        moreConversationIsDisplayed: false,\r\n        newSenderIsChoose: false,\r\n        alertUserFound: \"\",\r\n        currentDisplayedPage: \"conversation\" \r\n    }\r\n\r\n    openTypeConversatons = (event:any) => {\r\n        event.currentTarget.style.setProperty(\"transition\", \"all linear .05s\")\r\n        if(this.state.typeConversationIsOpen === false)\r\n            event.currentTarget.style.setProperty(\"rotate\", \"45deg\")\r\n        else\r\n            event.currentTarget.style.setProperty(\"rotate\", \"0deg\")\r\n        this.setState({\r\n                        typeConversationIsOpen: !this.state.typeConversationIsOpen,\r\n                        moreConversationIsDisplayed: !this.state.typeConversationIsOpen,\r\n                        currentDisplayedPage: \"conversation\"})\r\n    }\r\n\r\n    createPrivateChatRoom = (email:string|null, phoneNumber:string|null, chatRoomId:string|number = -1) =>\r\n    {\r\n        var toSend = \"\"\r\n        if(email !== null && email.trim().toLowerCase().length > 0)\r\n            toSend = `emailAdress=${email}`\r\n        else if(phoneNumber !== null && phoneNumber.trim().length > 0 && email === null)\r\n            toSend = `phoneNumber=${phoneNumber}`\r\n        else if(chatRoomId !== \"\" && chatRoomId > -1)\r\n            toSend = `userProfileId=${phoneNumber}`\r\n        if(toSend !== \"\")\r\n        {\r\n            console.log(\"Sending request\")\r\n            requestWithoutBody(`${settings.host}/api/ChatRoom/CreatePrivate?${toSend}`, \"POST\", this.cookies.get(\"token\"), this.sucessFunction, this.errorFunction)\r\n        }\r\n        else\r\n            console.log('error')\r\n    }\r\n\r\n    sucessFunction = (result:any) => {\r\n        console.log(\"inside success function\")\r\n        var keys = Object.keys(result)\r\n        if(keys.includes('chatRoomId'))\r\n        {\r\n            var identity = result.userProfile.identity\r\n            var name = result.userProfile.username\r\n            var id = result.userProfile.id\r\n            var userChatRoomId = result.id\r\n            this.props.openConversation(identity, id, userChatRoomId, name, \"person\")\r\n            let elements = document.getElementsByClassName(\"new-conversation\")\r\n            if(elements.length >= 0)\r\n                elements.item(0)?.setAttribute(\"style\", \"rotate:0deg;\")//?.style.setProperty(\"rotate\", \"0deg\")\r\n            this.setState({\r\n                typeConversationIsOpen: !this.state.typeConversationIsOpen,\r\n                moreConversationIsDisplayed: !this.state.typeConversationIsOpen,\r\n                currentDisplayedPage: \"conversation\"})\r\n        }\r\n        else  this.setState({alertUserFound: `Error! something happen wrong ${result}`  })\r\n\r\n    } \r\n\r\n    errorFunction = (error:any) => {\r\n        this.setState({alertUserFound: `Error! ${error}`  })\r\n    }\r\n\r\n    newMessage = (event:any) => {\r\n        this.setState({\r\n            moreConversationIsDisplayed: false, currentDisplayedPage: \"newMessagePage\"})\r\n    }\r\n\r\n    newGroup = (event:any) => {\r\n        this.setState({\r\n            moreConversationIsDisplayed: false, currentDisplayedPage: \"newGroupPage\"})\r\n    }\r\n\r\n    newChatRoom = (event:any) => {\r\n        this.setState({\r\n            moreConversationIsDisplayed: false, currentDisplayedPage: \"newPrivateChatRoom\"})\r\n    }\r\n\r\n    getData(email:string=\"\", phone:string=\"\", id:string|number=\"\")\r\n    {\r\n        return {id:\"\", identity:email??phone, name:email||phone, category:\"person\", image:\"\"}\r\n        // return this._users.find((d) => (d.email === email) || (d.id === id) || (d.phoneNumber === phone))\r\n    }\r\n\r\n    submitForm = (data:Credential) => {\r\n        let user:UserProfile|undefined = this.getData(`${data.email}`.toLocaleLowerCase().trim(), \r\n                                                        `${data.phoneNumber}`.toLocaleLowerCase().trim(), \"\")\r\n        if((data.email !== null || data.phoneNumber != null) && data.password !== \"\")\r\n            this.setState({newSenderIsChoose: true})\r\n        \r\n        let isEmail = data.email !== undefined && data.email !== \"\" \r\n    \r\n        if(user === undefined)\r\n            this.setState({alertUserFound: `No user found with this ${(isEmail)?\"email\":\"phone number\"}`})\r\n        else\r\n        {\r\n            try {\r\n                console.log('Request to create chat room')\r\n                this.createPrivateChatRoom(data.email, data.phoneNumber)\r\n            } catch (error) {\r\n                \r\n            }\r\n            \r\n        }    \r\n    }\r\n\r\n    handleChange = () => {\r\n        this.setState({alertUserFound: \"\"})\r\n    }\r\n\r\n    render(){\r\n        let newPage = {\"newMessagePage\":<NewMessage handleChange = {this.handleChange} alertMessage = {this.state.alertUserFound} submitForm = {this.submitForm}/>,  \"newGroupPage\":<NewGroup submitForm = {this.submitForm}/>, \"newPrivateChatRoom\":<NewPrivateChat submitForm = {this.submitForm}/>}[this.state.currentDisplayedPage]           \r\n        return(\r\n            <div className=\"left-side\">\r\n                {(newPage !== null && newPage !== undefined)?(newPage):(\r\n                    <>\r\n                        <div >\r\n                            <ActionBar  />\r\n                        </div>\r\n                        <div className = \"conversation-list\">\r\n                            <ListConversation conversations = {this.state.conversations} openConversation={this.props.openConversation}/>\r\n                        </div>\r\n                    </>)\r\n                }\r\n                <div className = \"more-conversations\">\r\n                    {(this.state.moreConversationIsDisplayed)?(<div className = \"type-conversations\">\r\n                        <span onClick = {this.newMessage}> New message </span>\r\n                        <span onClick = {this.newGroup}> New groupe </span>\r\n                        <span onClick = {this.newChatRoom}> Private tchat room</span>\r\n                    </div>):null}\r\n                    <div className = \"new-conversation\" onClick = {this.openTypeConversatons}>\r\n                        <img src={add} alt=\"new\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LeftSide\r\n"]},"metadata":{},"sourceType":"module"}