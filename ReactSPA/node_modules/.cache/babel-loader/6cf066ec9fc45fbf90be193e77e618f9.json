{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\LoginPage\\\\LoginPage.tsx\";\nimport { Component } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport Cookies from \"universal-cookie\";\nimport LoginForm from \"./LoginForm/LoginForm\";\nimport FormMessage from \"../../shared/formmessage/FormMessage\";\nimport PageName from '../../shared/pagename/PageName';\nimport { VerticalLogo } from \"../../shared/logo/Logos\";\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this._alertMessage = \"Use either email or phone number\";\n    this._alertType = \"error\";\n    this.cookies = new Cookies();\n    this.state = {\n      isAuthenticated: false,\n      alertMessage: this._alertMessage,\n      alertType: this._alertType\n    };\n    this.props = this.props;\n\n    this.submitForm = data => {\n      // if(data.email === null) data.email = \"\"\n      // else if(data.phoneNumber === null) data.phoneNumber = \"\"\n      fetch(\"https://www.estenligne.com:44364/api/account/signin\", {\n        \"method\": \"POST\",\n        \"headers\": {\n          \"content-type\": \"application/json\",\n          \"accept\": \"application/json\"\n        },\n        \"body\": JSON.stringify(data)\n      }).then(response => response.json()) // .then(response => {\n      //     console.log(response)\n      //   })\n      //   .catch(err => {\n      //     console.log(err);\n      //   });\n      .then(result => {\n        let keys = Object.keys(result);\n\n        if (keys.includes(\"id\") && keys.includes(\"userName\")) {\n          this.setState({\n            isAuthenticated: true,\n            alertType: 'success',\n            alertMessage: `Successfull login ${result.userName} you will be redirect soon`\n          });\n          let date = new Date();\n          let expirationDate = new Date();\n          expirationDate.setMinutes(date.getMinutes() + 7 * 24 * 60);\n          this.cookies.set(\"isAuthenticated\", true, {\n            sameSite: true,\n            expires: expirationDate\n          });\n          this.cookies.set(\"userId\", true, {\n            sameSite: true,\n            expires: expirationDate\n          });\n\n          try {\n            this.props.changeAuthenticationState(true, result.id);\n          } catch (error) {}\n        } else this.setState({\n          isAuthenticated: false,\n          alertType: 'error',\n          alertMessage: `Error! ${result}`\n        });\n      }, error => {\n        console.log(error);\n        this.setState({\n          isAuthenticated: false,\n          alertType: 'error',\n          alertMessage: `Something append wrong ${error}`\n        });\n      });\n    };\n  }\n\n  render() {\n    return this.state.isAuthenticated === true ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 52\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(PageName, {\n          name: \"Login\"\n        }, \"login-page-name\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, \"login-page-name-section\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(VerticalLogo, {}, \"login-page-logo\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormMessage, {\n          type: this.state.alertType,\n          message: this.state.alertMessage\n        }, \"login-page-alert-message\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n          submitForm: this.submitForm\n        }, \"login-page-form\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/resetpassword\",\n          className: \"fs-6 fw-bold link-secondary\",\n          children: ['>', \" Forgot Password \", '<']\n        }, \"login-page-link1\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: \"fs-5 fw-bold link-secondary\",\n          children: ['>>', \" Create Account \", '<<']\n        }, \"login-page-link2\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, \"login-page-tools-sections\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, \"login-page\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/LoginPage/LoginPage.tsx"],"names":["Component","Link","Redirect","Cookies","LoginForm","FormMessage","PageName","VerticalLogo","LoginPage","_alertMessage","_alertType","cookies","state","isAuthenticated","alertMessage","alertType","props","submitForm","data","fetch","JSON","stringify","then","response","json","result","keys","Object","includes","setState","userName","date","Date","expirationDate","setMinutes","getMinutes","set","sameSite","expires","changeAuthenticationState","id","error","console","log","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport LoginForm from \"./LoginForm/LoginForm\";\r\nimport FormMessage from \"../../shared/formmessage/FormMessage\";\r\n\r\nimport PageName from '../../shared/pagename/PageName';\r\nimport {VerticalLogo} from \"../../shared/logo/Logos\";\r\nimport { Credential } from \"../../shared/utils/Types\";\r\n  \r\nimport './LoginPage.css'\r\n\r\nclass LoginPage extends Component{\r\n    _alertMessage = \"Use either email or phone number\"\r\n    _alertType = \"error\"\r\n    cookies = new Cookies()\r\n\r\n    state = {\r\n        isAuthenticated: false,\r\n        alertMessage: this._alertMessage,\r\n        alertType: this._alertType\r\n    }\r\n    props:any = this.props\r\n\r\n    submitForm = (data:Credential) => {\r\n        // if(data.email === null) data.email = \"\"\r\n        // else if(data.phoneNumber === null) data.phoneNumber = \"\"\r\n        fetch(\"https://www.estenligne.com:44364/api/account/signin\", {\r\n            \"method\": \"POST\",\r\n            \"headers\": {\r\n                \"content-type\": \"application/json\",\r\n                \"accept\": \"application/json\"\r\n            },\r\n            \"body\": JSON.stringify(data)\r\n            }).then(response => response.json())\r\n            // .then(response => {\r\n            //     console.log(response)\r\n            //   })\r\n            //   .catch(err => {\r\n            //     console.log(err);\r\n            //   });\r\n            .then(\r\n                (result) => {\r\n                    let keys = Object.keys(result)\r\n                    if(keys.includes(\"id\") && keys.includes(\"userName\"))\r\n                    {\r\n                        this.setState({isAuthenticated: true, alertType : 'success',  alertMessage: `Successfull login ${result.userName} you will be redirect soon`})\r\n                        let date = new Date()\r\n                        let expirationDate = new Date()\r\n                        expirationDate.setMinutes(date.getMinutes() + 7 * 24 * 60)\r\n                        this.cookies.set(\"isAuthenticated\", true, {sameSite: true, expires:expirationDate })\r\n                        this.cookies.set(\"userId\", true, {sameSite: true, expires:expirationDate })\r\n                        \r\n                        try {\r\n                            this.props.changeAuthenticationState(true, result.id)\r\n                        } catch (error) {}\r\n                    }\r\n                    else\r\n                        this.setState({isAuthenticated: false, alertType : 'error',  alertMessage: `Error! ${result}`})\r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                    this.setState({isAuthenticated: false, alertType : 'error',  alertMessage: `Something append wrong ${error}`})\r\n                }\r\n            );\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            (this.state.isAuthenticated === true)?(<Redirect to =\"/home\"  />):\r\n            (<div className = \"login-page\" key=\"login-page\">\r\n                <div className=\"title\" key=\"login-page-name-section\">\r\n                    <PageName name=\"Login\" key = \"login-page-name\"/>\r\n                </div>\r\n                <div className = \"content\" key=\"login-page-tools-sections\">\r\n                    <VerticalLogo key = \"login-page-logo\"/>\r\n                    <FormMessage type={this.state.alertType} message = {this.state.alertMessage} key = \"login-page-alert-message\"/>\r\n                    <LoginForm submitForm = {this.submitForm} key = \"login-page-form\"/>\r\n                    <Link to = '/resetpassword' key = \"login-page-link1\" className = \"fs-6 fw-bold link-secondary\">{'>'} Forgot Password {'<'}</Link>\r\n                    <Link to = \"/register\" key = \"login-page-link2\" className=\"fs-5 fw-bold link-secondary\">{'>>'} Create Account {'<<'}</Link>\r\n                </div>\r\n            </div>)\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage"]},"metadata":{},"sourceType":"module"}