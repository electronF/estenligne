{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\UserProfilePage\\\\UserProfilePage.tsx\";\nimport { Component } from \"react\";\nimport PageName from \"../../shared/pagename/PageName\";\nimport { VerticalLogo } from \"../../shared/logo/Logos\";\nimport FormMessage from \"../../shared/formmessage/FormMessage\";\nimport UserProfileForm from \"./UserProfileForm/UserProfileForm\";\nimport \"./UserProfilePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserProfilePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.props = this.props;\n    this._alertMessage = \"Use either email or phone number\";\n    this._alertType = \"error\";\n    this.state = {\n      userName: \"\",\n      isRegister: false,\n      alertMessage: this._alertMessage,\n      alertType: this._alertType\n    };\n\n    this.successFunction = result => {\n      var keys = Object.keys(result);\n\n      if (keys.includes(\"id\") && keys.includes(\"userName\")) {\n        this.setState({\n          isRegister: false,\n          alertType: 'success',\n          alertMessage: `Account is created and an ${result.email !== null ? \"email to your email adress\" : \"message to your phone number\"}`\n        });\n        var identity = result.email === null ? result.phoneNumber : result.email;\n        this.submitFunction(\"https://www.estenligne.com:44364/api/UserProfile\", \"POST\", {\n          identity: identity,\n          username: this.state.userName,\n          about: null\n        }, data => {\n          console.log(\"Success\", data);\n        }, data => {\n          console.log(\"error\", data);\n        });\n      } else this.setState({\n        isRegister: false,\n        alertType: 'error',\n        alertMessage: `Error!\\n${result}`\n      });\n    };\n\n    this.errorFunction = error => {\n      this.setState({\n        isRegister: false,\n        alertType: 'error',\n        alertMessage: `Something append wrong ${error}`\n      });\n    };\n\n    this.submitForm = data => {\n      var newData = {\n        email: data.email,\n        phoneNumber: data.phoneNumber,\n        password: data.password\n      };\n      this.submitFunction(\"https://www.estenligne.com:44364/api/Account/Register\", \"POST\", newData, this.successFunction, this.errorFunction);\n    };\n  }\n\n  submitFunction(url, type, data, successFunction, errorFunction) {\n    fetch(url, {\n      \"method\": type,\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      \"body\": JSON.stringify(data)\n    }).then(response => response.json()).then(result => {\n      successFunction(result);\n    }, error => {\n      errorFunction(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pofile-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(PageName, {\n          name: \"Profile Page\"\n        }, \"profilepage-name\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(VerticalLogo, {}, \"register-page-logo\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormMessage, {\n          type: this.state.alertType,\n          message: this.state.alertMessage\n        }, \"profilepage-alert-message\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UserProfileForm, {\n          submitForm: this.submitForm\n        }, \"profilepage-form\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserProfilePage;","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/UserProfilePage/UserProfilePage.tsx"],"names":["Component","PageName","VerticalLogo","FormMessage","UserProfileForm","UserProfilePage","props","_alertMessage","_alertType","state","userName","isRegister","alertMessage","alertType","successFunction","result","keys","Object","includes","setState","email","identity","phoneNumber","submitFunction","username","about","data","console","log","errorFunction","error","submitForm","newData","password","url","type","fetch","mode","cache","credentials","headers","JSON","stringify","then","response","json","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAIA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AAEA,OAAO,uBAAP;;;AAGA,MAAMC,eAAN,SAA8BL,SAA9B,CAAuC;AAAA;AAAA;AAAA,SACnCM,KADmC,GACvB,KAAKA,KADkB;AAAA,SAEnCC,aAFmC,GAEnB,kCAFmB;AAAA,SAGnCC,UAHmC,GAGtB,OAHsB;AAAA,SAInCC,KAJmC,GAI3B;AACJC,MAAAA,QAAQ,EAAC,EADL;AAEJC,MAAAA,UAAU,EAAE,KAFR;AAGJC,MAAAA,YAAY,EAAE,KAAKL,aAHf;AAIJM,MAAAA,SAAS,EAAE,KAAKL;AAJZ,KAJ2B;;AAAA,SAWnCM,eAXmC,GAWhBC,MAAD,IAClB;AACI,UAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,MAAZ,CAAX;;AACA,UAAGC,IAAI,CAACE,QAAL,CAAc,IAAd,KAAuBF,IAAI,CAACE,QAAL,CAAc,UAAd,CAA1B,EACA;AACI,aAAKC,QAAL,CAAc;AAACR,UAAAA,UAAU,EAAE,KAAb;AAAoBE,UAAAA,SAAS,EAAG,SAAhC;AAA4CD,UAAAA,YAAY,EAAG,6BAA6BG,MAAM,CAACK,KAAP,KAAiB,IAAlB,GAAwB,4BAAxB,GAAqD,8BAA+B;AAA3K,SAAd;AACA,YAAIC,QAAQ,GAAGN,MAAM,CAACK,KAAP,KAAiB,IAAjB,GAAsBL,MAAM,CAACO,WAA7B,GAAyCP,MAAM,CAACK,KAA/D;AACA,aAAKG,cAAL,CAAoB,kDAApB,EAAwE,MAAxE,EAAgF;AAACF,UAAAA,QAAQ,EAACA,QAAV;AAAoBG,UAAAA,QAAQ,EAAC,KAAKf,KAAL,CAAWC,QAAxC;AAAkDe,UAAAA,KAAK,EAAC;AAAxD,SAAhF,EAAgJC,IAAD,IAAY;AAACC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AAA6B,SAAzL,EAA4LA,IAAD,IAAY;AAACC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;AAA2B,SAAnO;AACH,OALD,MAOI,KAAKP,QAAL,CAAc;AAACR,QAAAA,UAAU,EAAE,KAAb;AAAoBE,QAAAA,SAAS,EAAG,OAAhC;AAA0CD,QAAAA,YAAY,EAAG,WAAUG,MAAO;AAA1E,OAAd;AAEP,KAvBkC;;AAAA,SAyBnCc,aAzBmC,GAyBlBC,KAAD,IAChB;AACI,WAAKX,QAAL,CAAc;AAACR,QAAAA,UAAU,EAAE,KAAb;AAAoBE,QAAAA,SAAS,EAAG,OAAhC;AAA0CD,QAAAA,YAAY,EAAG,0BAAyBkB,KAAM;AAAxF,OAAd;AACH,KA5BkC;;AAAA,SAqDnCC,UArDmC,GAqDrBL,IAAD,IAAqB;AAC9B,UAAIM,OAAO,GAAG;AAACZ,QAAAA,KAAK,EAAEM,IAAI,CAACN,KAAb;AAAoBE,QAAAA,WAAW,EAAEI,IAAI,CAACJ,WAAtC;AAAmDW,QAAAA,QAAQ,EAACP,IAAI,CAACO;AAAjE,OAAd;AACA,WAAKV,cAAL,CAAoB,uDAApB,EAA6E,MAA7E,EAAqFS,OAArF,EAA8F,KAAKlB,eAAnG,EAAoH,KAAKe,aAAzH;AACH,KAxDkC;AAAA;;AA8BnCN,EAAAA,cAAc,CAACW,GAAD,EAAaC,IAAb,EAA0BT,IAA1B,EAAoCZ,eAApC,EAA8De,aAA9D,EACd;AACIO,IAAAA,KAAK,CAACF,GAAD,EAAM;AACP,gBAAUC,IADH;AAEPE,MAAAA,IAAI,EAAE,MAFC;AAGPC,MAAAA,KAAK,EAAE,UAHA;AAIPC,MAAAA,WAAW,EAAE,aAJN;AAKPC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT,CAEP;;AAFO,OALF;AASP,cAAQC,IAAI,CAACC,SAAL,CAAehB,IAAf;AATD,KAAN,CAAL,CAUOiB,IAVP,CAUYC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAVxB,EAWKF,IAXL,CAYS5B,MAAD,IAAY;AACRD,MAAAA,eAAe,CAACC,MAAD,CAAf;AACH,KAdT,EAeSe,KAAD,IAAW;AACPD,MAAAA,aAAa,CAACC,KAAD,CAAb;AACH,KAjBT;AAmBH;;AAODgB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAG,OAAjB;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAG;AAAjB,WAAsC,kBAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAG,SAAjB;AAAA,gCACI,QAAC,YAAD,MAAoB,oBAApB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAa,UAAA,IAAI,EAAE,KAAKrC,KAAL,CAAWI,SAA9B;AAAyC,UAAA,OAAO,EAAI,KAAKJ,KAAL,CAAWG;AAA/D,WAAmF,2BAAnF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,eAAD;AAAiB,UAAA,UAAU,EAAI,KAAKmB;AAApC,WAAsD,kBAAtD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAxEkC;;AA2EvC,eAAe1B,eAAf","sourcesContent":["import { Component } from \"react\";\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport PageName from \"../../shared/pagename/PageName\";\r\nimport { VerticalLogo } from \"../../shared/logo/Logos\";\r\nimport FormMessage from \"../../shared/formmessage/FormMessage\";\r\nimport UserProfileForm from \"./UserProfileForm/UserProfileForm\";\r\n\r\nimport \"./UserProfilePage.css\"\r\nimport { Credential } from \"../../shared/utils/Types\";\r\n\r\nclass UserProfilePage extends Component{\r\n    props:any = this.props\r\n    _alertMessage = \"Use either email or phone number\"\r\n    _alertType = \"error\"\r\n    state = {\r\n        userName:\"\",\r\n        isRegister: false,\r\n        alertMessage: this._alertMessage,\r\n        alertType: this._alertType\r\n    }\r\n\r\n    successFunction = (result:any) =>\r\n    {\r\n        var keys = Object.keys(result)\r\n        if(keys.includes(\"id\") && keys.includes(\"userName\"))\r\n        {\r\n            this.setState({isRegister: false, alertType : 'success',  alertMessage: `Account is created and an ${(result.email !== null)?\"email to your email adress\":\"message to your phone number\"}`})\r\n            var identity = result.email === null?result.phoneNumber:result.email\r\n            this.submitFunction(\"https://www.estenligne.com:44364/api/UserProfile\", \"POST\", {identity:identity, username:this.state.userName, about:null}, (data:any)=>{console.log(\"Success\", data)}, (data:any)=>{console.log(\"error\", data)})\r\n        }\r\n        else\r\n            this.setState({isRegister: false, alertType : 'error',  alertMessage: `Error!\\n${result}`})\r\n\r\n    }\r\n\r\n    errorFunction = (error:any) =>\r\n    {\r\n        this.setState({isRegister: false, alertType : 'error',  alertMessage: `Something append wrong ${error}`})\r\n    }\r\n\r\n    submitFunction(url:string, type:string, data:any, successFunction:Function, errorFunction:Function)\r\n    {\r\n        fetch(url, {\r\n            \"method\": type,\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin', \r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n              // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            \"body\": JSON.stringify(data)\r\n            }).then(response => response.json())\r\n            .then(\r\n                (result) => {\r\n                    successFunction(result)\r\n                },\r\n                (error) => {\r\n                    errorFunction(error)\r\n                }\r\n            );\r\n    }\r\n\r\n    submitForm = (data:Credential) => {\r\n        var newData = {email: data.email, phoneNumber: data.phoneNumber, password:data.password} \r\n        this.submitFunction(\"https://www.estenligne.com:44364/api/Account/Register\", \"POST\", newData, this.successFunction, this.errorFunction)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"pofile-page\" >\r\n                <div className = \"title\">\r\n                    <PageName name = \"Profile Page\" key = \"profilepage-name\"/>    \r\n                </div>\r\n                \r\n                <div className = \"content\">\r\n                    <VerticalLogo key = \"register-page-logo\"/>\r\n                    <FormMessage type={this.state.alertType} message = {this.state.alertMessage} key = \"profilepage-alert-message\"/>\r\n                    <UserProfileForm submitForm = {this.submitForm} key = \"profilepage-form\" />\r\n                </div>\r\n            </div>\r\n        )    \r\n    }\r\n}\r\n\r\nexport default UserProfilePage"]},"metadata":{},"sourceType":"module"}