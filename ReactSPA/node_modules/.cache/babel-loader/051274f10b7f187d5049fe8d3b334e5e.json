{"ast":null,"code":"function validateEmail(text) {\n  let exp = /^([a-zA-Z0-9_\\-.]+)@((\\[\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.)|(([a-zA-Z0-9-]+\\.)+))([a-zA-Z]{2,4}|\\d{1,3})(\\]?)$/;\n  return exp.test(text);\n}\n\nfunction validatePassword(text) {\n  return text.length >= 6;\n}\n\nfunction validateNumber(text) {\n  let exp = /^((00)|(\\+\\d+))?(\\d{6,})$/;\n  return exp.test(text);\n}\n/**\r\n * \r\n * @param url the url\r\n * @param type the type of query POST, GET, PUT, DELETE\r\n * @param data Key value object\r\n * @param successFunction Success function\r\n * @param errorFunction Error function\r\n */\n\n\nfunction sendRequest(url, type, data, successFunction, errorFunction) {\n  console.log(\"Request is sent to:\", url);\n  fetch(url, {\n    \"method\": type,\n    \"headers\": {\n      \"content-type\": \"application/json\",\n      \"accept\": \"application/json\"\n    },\n    \"body\": JSON.stringify(data)\n  }).then(response => response.json()).then(result => {\n    console.log(\"Response is get\", result);\n    successFunction(result);\n  }, error => {\n    errorFunction(error);\n  });\n}\n\nexport { validateEmail, validateNumber, validatePassword, sendRequest };","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/shared/utils/functions.tsx"],"names":["validateEmail","text","exp","test","validatePassword","length","validateNumber","sendRequest","url","type","data","successFunction","errorFunction","console","log","fetch","JSON","stringify","then","response","json","result","error"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,IAAvB,EACA;AACI,MAAIC,GAAG,GAAG,yGAAV;AACA,SAAOA,GAAG,CAACC,IAAJ,CAASF,IAAT,CAAP;AACH;;AAED,SAASG,gBAAT,CAA0BH,IAA1B,EACA;AACI,SAAOA,IAAI,CAACI,MAAL,IAAe,CAAtB;AACH;;AAED,SAASC,cAAT,CAAwBL,IAAxB,EACA;AACI,MAAIC,GAAG,GAAG,2BAAV;AACA,SAAOA,GAAG,CAACC,IAAJ,CAASF,IAAT,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,WAAT,CAAqBC,GAArB,EAAiCC,IAAjC,EAA8CC,IAA9C,EAA2DC,eAA3D,EAAqFC,aAArF,EACA;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCN,GAAnC;AACAO,EAAAA,KAAK,CAACP,GAAD,EAAM;AACP,cAAUC,IADH;AAEP,eAAW;AACP,sBAAgB,kBADT;AAEP,gBAAU;AAFH,KAFJ;AAMP,YAAQO,IAAI,CAACC,SAAL,CAAeP,IAAf;AAND,GAAN,CAAL,CAOOQ,IAPP,CAOYC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPxB,EAQKF,IARL,CASSG,MAAD,IAAY;AACRR,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BO,MAA/B;AACAV,IAAAA,eAAe,CAACU,MAAD,CAAf;AACH,GAZT,EAaSC,KAAD,IAAW;AACPV,IAAAA,aAAa,CAACU,KAAD,CAAb;AACH,GAfT;AAiBH;;AAED,SAAQtB,aAAR,EAAuBM,cAAvB,EAAuCF,gBAAvC,EAAyDG,WAAzD","sourcesContent":["function validateEmail(text:string) \r\n{\r\n    let exp = /^([a-zA-Z0-9_\\-.]+)@((\\[\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.)|(([a-zA-Z0-9-]+\\.)+))([a-zA-Z]{2,4}|\\d{1,3})(\\]?)$/\r\n    return exp.test(text)\r\n}\r\n\r\nfunction validatePassword(text:string)\r\n{\r\n    return text.length >= 6\r\n}\r\n\r\nfunction validateNumber(text:string) \r\n{\r\n    let exp = /^((00)|(\\+\\d+))?(\\d{6,})$/\r\n    return exp.test(text)\r\n}\r\n\r\n/**\r\n * \r\n * @param url the url\r\n * @param type the type of query POST, GET, PUT, DELETE\r\n * @param data Key value object\r\n * @param successFunction Success function\r\n * @param errorFunction Error function\r\n */\r\nfunction sendRequest(url:string, type:string, data:Object, successFunction:Function, errorFunction:Function)\r\n{    \r\n    console.log(\"Request is sent to:\", url)\r\n    fetch(url, {\r\n        \"method\": type,\r\n        \"headers\": {\r\n            \"content-type\": \"application/json\",\r\n            \"accept\": \"application/json\"\r\n        },\r\n        \"body\": JSON.stringify(data)\r\n        }).then(response => response.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(\"Response is get\", result)\r\n                successFunction(result)\r\n            },\r\n            (error) => {\r\n                errorFunction(error)\r\n            }\r\n        );\r\n}\r\n\r\nexport {validateEmail, validateNumber, validatePassword, sendRequest}"]},"metadata":{},"sourceType":"module"}