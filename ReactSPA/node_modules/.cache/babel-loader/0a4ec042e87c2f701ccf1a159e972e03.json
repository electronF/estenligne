{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\HomePage\\\\Body\\\\RightSide\\\\Chat\\\\ListMessage\\\\Message\\\\Message.tsx\";\nimport { Component } from \"react\";\nimport isWaiting from \"./../../../../../../../../wwwroot/images/important_2.png\";\nimport tickDark from \"./../../../../../../../../wwwroot/images/tick_dark.png\";\nimport doubleTickReceived from \"./../../../../../../../../wwwroot/images/double_tick_dark_1.png\";\nimport doubleTickRead from \"./../../../../../../../../wwwroot/images/double_tick_blue_2.png\";\nimport TaggedMessage from '../../../../../../../shared/TaggedMessage/TaggedMessage';\nimport TransferedMessage from '../../../../../../../shared/TransferedMessage/TransferedMessage';\nimport \"./Message.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Message extends Component {\n  constructor(...args) {\n    super(...args);\n    this.props = this.props;\n    this.messageOptionsAreDisplayed = false;\n\n    this.onShowHideMessageOption = event => {\n      var div = event.currentTarget.nextElementSibling;\n      this.messageOptionsAreDisplayed = !this.messageOptionsAreDisplayed;\n      if (this.messageOptionsAreDisplayed === true) div.style.setProperty(\"display\", \"none\");else div.style.setProperty(\"display\", \"flex\");\n    };\n\n    this.onShow = event => {\n      var div = event.currentTarget.nextElementSibling;\n      div.style.setProperty(\"display\", \"flex\");\n    };\n\n    this.onHide = event => {\n      var div = event.currentTarget.nextElementSibling;\n      div.style.setProperty(\"display\", \"none\");\n    };\n  }\n\n  render() {\n    var {\n      type,\n      isIncomingMessage,\n      isTransfered,\n      isTagged,\n      taggetMessageData,\n      message,\n      time,\n      status,\n      onTaggedMessage,\n      onEnableDeletion,\n      onShareMessage\n    } = this.props;\n    var styleImage = {\n      width: 50,\n      height: 50\n    };\n    var styleDescription = {\n      flex: \"1 0 auto\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"flex-start\"\n    };\n    var iconStyle = {\n      width: \"20px\",\n      height: \"20px\",\n      margin: \"auto 0\"\n    };\n    var spanStyle = {\n      margin: 'auto 0 auto 5px',\n      fontSize: \".8em\",\n      color: \"gray\",\n      FontWeight: \"bold\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `prev-message ${isIncomingMessage === true ? \"incoming-message\" : \"outgoing-message\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: event => this.onShowHideMessageOption(event),\n          onBlur: event => this.onHide(event),\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prev-message-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: onTaggedMessage,\n            children: \" Reply \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: onEnableDeletion,\n            children: \" Delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: onShareMessage,\n            children: \" Shared \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prev-message-content\",\n          children: [isTransfered === true ? /*#__PURE__*/_jsxDEV(TransferedMessage, {\n            message: \"This is the shared message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 26\n          }, this) : isTagged === true ? /*#__PURE__*/_jsxDEV(TaggedMessage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 26\n          }, this) : null, isTransfered !== true && type === \"file\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Image file can be pdf, audio, video, image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 69\n          }, this) : null, isTransfered !== true && message.length > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: isIncomingMessage === true ? \"incoming-message-text\" : \"outgoing-message-text\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 72\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sending-information\",\n          children: [isIncomingMessage === true ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"send-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: outGoingsendImage(status),\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 63\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"send-datetime\",\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Message;\n\nfunction outGoingsendImage(status) {\n  switch (status) {\n    case \"send\":\n      return tickDark;\n\n    case \"received\":\n      return doubleTickReceived;\n\n    case \"read\":\n      return doubleTickRead;\n\n    default:\n      return isWaiting;\n  }\n\n  ;\n}","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/HomePage/Body/RightSide/Chat/ListMessage/Message/Message.tsx"],"names":["Component","isWaiting","tickDark","doubleTickReceived","doubleTickRead","TaggedMessage","TransferedMessage","Message","props","messageOptionsAreDisplayed","onShowHideMessageOption","event","div","currentTarget","nextElementSibling","style","setProperty","onShow","onHide","render","type","isIncomingMessage","isTransfered","isTagged","taggetMessageData","message","time","status","onTaggedMessage","onEnableDeletion","onShareMessage","styleImage","width","height","styleDescription","flex","display","flexDirection","justifyContent","iconStyle","margin","spanStyle","fontSize","color","FontWeight","length","outGoingsendImage"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\n\r\nimport isWaiting from \"./../../../../../../../../wwwroot/images/important_2.png\"\r\nimport tickDark from \"./../../../../../../../../wwwroot/images/tick_dark.png\"\r\nimport doubleTickReceived from \"./../../../../../../../../wwwroot/images/double_tick_dark_1.png\"\r\nimport doubleTickRead from \"./../../../../../../../../wwwroot/images/double_tick_blue_2.png\"\r\n\r\nimport TaggedMessage from '../../../../../../../shared/TaggedMessage/TaggedMessage';\r\nimport TransferedMessage from '../../../../../../../shared/TransferedMessage/TransferedMessage';\r\n\r\nimport \"./Message.css\"\r\n\r\nclass Message extends Component{\r\n    props:any = this.props\r\n\r\n    messageOptionsAreDisplayed = false\r\n\r\n    onShowHideMessageOption = (event:React.MouseEvent<HTMLSpanElement, MouseEvent>) => \r\n    {\r\n        var div = event.currentTarget.nextElementSibling as HTMLDivElement\r\n        this.messageOptionsAreDisplayed = !this.messageOptionsAreDisplayed\r\n        if(this.messageOptionsAreDisplayed === true)\r\n            div.style.setProperty(\"display\", \"none\")\r\n        else\r\n            div.style.setProperty(\"display\", \"flex\")\r\n    }\r\n\r\n    onShow = (event:React.FocusEvent<HTMLSpanElement>) => \r\n    {\r\n        var div = event.currentTarget.nextElementSibling as HTMLDivElement\r\n        div.style.setProperty(\"display\", \"flex\")\r\n    }\r\n\r\n    onHide = (event:React.SyntheticEvent<HTMLSpanElement, Event>) => \r\n    {\r\n        var div = event.currentTarget.nextElementSibling as HTMLDivElement\r\n        div.style.setProperty(\"display\", \"none\")\r\n    }\r\n\r\n    render(){\r\n        var {\r\n            type, isIncomingMessage, \r\n            isTransfered, isTagged, \r\n            taggetMessageData, message, \r\n            time, status, \r\n            onTaggedMessage, onEnableDeletion, \r\n            onShareMessage} = this.props\r\n        \r\n        var styleImage = {\r\n            width: 50,\r\n            height: 50\r\n        }\r\n\r\n        var styleDescription = {\r\n            flex: \"1 0 auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\" as const,\r\n            justifyContent: \"flex-start\"\r\n        }\r\n\r\n        var iconStyle = {\r\n            width: \"20px\",\r\n            height: \"20px\",\r\n            margin: \"auto 0\"\r\n        }\r\n\r\n        var spanStyle = {\r\n            margin: 'auto 0 auto 5px',\r\n            fontSize:\".8em\",\r\n            color: \"gray\",\r\n            FontWeight:\"bold\"\r\n        }\r\n\r\n        return (\r\n            <div className ={`prev-message ${(isIncomingMessage===true)?\"incoming-message\":\"outgoing-message\"}`}>\r\n                <div> \r\n                    <span onClick = {(event)=> this.onShowHideMessageOption(event)} onBlur={(event)=> this.onHide(event)}>...</span>\r\n                    <div className=\"prev-message-option\">\r\n                        <span onClick = {onTaggedMessage}> Reply </span>\r\n                        <span onClick = {onEnableDeletion}> Delete </span>\r\n                        <span onClick = {onShareMessage}> Shared </span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"prev-message-content\">\r\n                    {((isTransfered===true)?\r\n                        (<TransferedMessage message={\"This is the shared message\"} />):\r\n                        ((isTagged === true)?\r\n                        (<TaggedMessage />):null))}\r\n\r\n                        {(isTransfered !== true && type === \"file\")?<div>\r\n                            Image file can be pdf, audio, video, image \r\n                        </div>:null}\r\n                        {(isTransfered !== true && message.length > 0)?<span className={(isIncomingMessage===true)?\"incoming-message-text\":\"outgoing-message-text\"}>{message}</span>:null}\r\n                    </div>\r\n                    <div className=\"sending-information\">\r\n                        {\r\n                            (isIncomingMessage === true)?null:<span className=\"send-image\">\r\n                            <img src={outGoingsendImage(status)} alt=\"\" />\r\n                            </span>\r\n                        }\r\n                        <span className=\"send-datetime\">{time}</span>\r\n                    </div>\r\n                    {/* <div className=\"failed-sending\">\r\n                        {\r\n                            (isIncomingMessage === true)?null:<span className=\"failed-sending-image\">\r\n                            <img src={important2} alt=\"\" />\r\n                            </span>\r\n                        }\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message\r\n\r\nfunction outGoingsendImage(status:string) {\r\n        switch (status) {\r\n            case \"send\":\r\n                return tickDark;\r\n            case \"received\":\r\n                return doubleTickReceived\r\n            case \"read\":\r\n                return doubleTickRead\r\n            default:\r\n                return isWaiting;\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}