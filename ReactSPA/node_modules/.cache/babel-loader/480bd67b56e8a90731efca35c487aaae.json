{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\HomePage\\\\HomePage.tsx\";\nimport { Component } from \"react\";\nimport Body from \"./Body/Body\";\nimport Head from \"./Head/Head\";\nimport Cookies from 'universal-cookie';\nimport settings from './../../../settings.json';\nimport \"./HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.cookies = new Cookies();\n    this.settings = settings;\n    this._id = \"\";\n    this.state = {\n      displayReceiverInformation: false,\n      receiverProfile: {\n        id: this._id,\n        email: \"\",\n        name: \"\",\n        category: \"person\",\n        image: \"\"\n      },\n      senderProfile: {\n        id: this._id,\n        email: \"\",\n        name: \"\",\n        category: \"person\",\n        image: \"\"\n      }\n    };\n    this.props = this.props;\n\n    this.sucessGetMessages = response => {\n      console.log(response);\n    };\n\n    this.errorGetMessage = error => {};\n\n    this.loadData = () => {\n      let userId = this.cookies.get(\"userId\");\n    };\n\n    this.successGetUserProfile = result => {\n      var keys = Object.keys(result);\n\n      if (keys.includes('id') && keys.includes(\"username\")) {\n        this.setState({\n          senderProfile: {\n            id: result.id,\n            name: result.name,\n            email: result.identity,\n            category: \"person\",\n            image: \"\"\n          }\n        });\n      } else {\n        this.setState({\n          senderProfile: {\n            id: this.cookies.get(\"userId\"),\n            email: this.cookies.get(\"userEmail\"),\n            name: this.cookies.get(\"userName\"),\n            category: \"person\",\n            image: \"\"\n          }\n        });\n      }\n    };\n\n    this.errorGetUserProfile = error => {// console.log(error)\n    };\n\n    this.componentDidMount = () => {};\n\n    this.getReceiverInformation = (email, id, name, category) => {\n      if (email !== \"\" || id !== \"\" || name !== \"\") {\n        this.setState({\n          displayReceiverInformation: true\n        });\n        this.setState({\n          receiverProfile: {\n            email,\n            id,\n            name,\n            category,\n            image: \"\"\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        displayReceiverInformation: this.state.displayReceiverInformation,\n        receiverProfile: this.state.receiverProfile,\n        senderProfile: this.state.senderProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Body, {\n        getReceiverInformation: this.getReceiverInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/HomePage/HomePage.tsx"],"names":["Component","Body","Head","Cookies","settings","HomePage","cookies","_id","state","displayReceiverInformation","receiverProfile","id","email","name","category","image","senderProfile","props","sucessGetMessages","response","console","log","errorGetMessage","error","loadData","userId","get","successGetUserProfile","result","keys","Object","includes","setState","identity","errorGetUserProfile","componentDidMount","getReceiverInformation","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport Body from \"./Body/Body\";\r\nimport Head from \"./Head/Head\";\r\nimport Cookies from 'universal-cookie';\r\nimport { postOrUpdateRequest, getOrDeleteRequest } from \"../../shared/utils/functions\";\r\nimport settings from './../../../settings.json';\r\n\r\nimport \"./HomePage.css\"\r\n\r\nclass HomePage extends Component\r\n{\r\n    cookies = new Cookies()\r\n    settings = settings\r\n    _id:string|number = \"\"\r\n    state = {\r\n        displayReceiverInformation : false,\r\n        receiverProfile : {\r\n            id : this._id,\r\n            email: \"\",\r\n            name: \"\",\r\n            category: \"person\",\r\n            image: \"\"\r\n        },\r\n        senderProfile : {\r\n            id : this._id,\r\n            email: \"\",\r\n            name: \"\",\r\n            category: \"person\",\r\n            image: \"\"\r\n        }\r\n    }\r\n\r\n    props:any = this.props\r\n\r\n    sucessGetMessages = (response:any) =>{\r\n        console.log(response)\r\n    }\r\n\r\n    errorGetMessage = (error:any) =>{\r\n\r\n    }\r\n\r\n    loadData = () => {\r\n        let userId = this.cookies.get(\"userId\")\r\n    }\r\n\r\n    successGetUserProfile = (result:any) => {\r\n        var keys = Object.keys(result)\r\n        if(keys.includes('id') && keys.includes(\"username\"))\r\n        {\r\n            this.setState({senderProfile : {id: result.id, name:result.name, email:result.identity, category:\"person\", image:\"\"}})\r\n        }\r\n        else\r\n        {\r\n            this.setState({senderProfile : {\r\n                id : this.cookies.get(\"userId\"),\r\n                email: this.cookies.get(\"userEmail\"),\r\n                name: this.cookies.get(\"userName\"),\r\n                category: \"person\",\r\n                image: \"\"\r\n            }})\r\n        }\r\n    }\r\n\r\n    errorGetUserProfile = (error:any) => {\r\n        // console.log(error)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n    }\r\n\r\n    getReceiverInformation = (email:string, id:number|string, name:string, category:string|number) => {\r\n        if(email !== \"\" || id !== \"\" || name !== \"\")\r\n        {\r\n            this.setState({displayReceiverInformation: true})\r\n            this.setState({receiverProfile: {email, id, name, category, image : \"\"}})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"home-page\">\r\n                <Head displayReceiverInformation = {this.state.displayReceiverInformation} receiverProfile = {this.state.receiverProfile} senderProfile = {this.state.senderProfile} />\r\n                <Body getReceiverInformation = {this.getReceiverInformation} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}