{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\src\\\\components\\\\Pages\\\\HomePage\\\\Body\\\\RightSide\\\\Chat\\\\ListMessage\\\\ListMessage.tsx\";\nimport { Component } from \"react\";\nimport Message from \"./Message/Message\";\nimport \"./ListMessage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListMessage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.props = this.props;\n  }\n\n  render() {\n    console.log(this.props.messages);\n    let messages = this.props.messages.map(data => /*#__PURE__*/_jsxDEV(Message, {\n      category: data.category,\n      type: data.file === \"\" ? \"text\" : \"file\",\n      isIncomingMessage: data.isIncomingMessage,\n      message: data.message,\n      time: getMessageTime(`${data.dateTime}`),\n      status: getMessageSendingStatus(data.isIncomingMessage, data.isSend, data.isReceive)\n    }, \"message\" + new Date().getTime() + Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 62\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-message\",\n      children: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListMessage;\n\nfunction getMessageTime(datetime) {\n  console.log(datetime);\n  let time = datetime.split(\"T\")[1];\n  let to = time.lastIndexOf(\":\");\n  return time.substring(0, to);\n}\n\nfunction getMessageSendingStatus(isIncomingMessage, isSend, isReceive) {\n  if (isIncomingMessage && isSend) return \"send\";else if (isIncomingMessage && isReceive) return \"received\";else return \"not-send\";\n}","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/src/components/Pages/HomePage/Body/RightSide/Chat/ListMessage/ListMessage.tsx"],"names":["Component","Message","ListMessage","props","render","console","log","messages","map","data","category","file","isIncomingMessage","message","getMessageTime","dateTime","getMessageSendingStatus","isSend","isReceive","Date","getTime","Math","random","datetime","time","split","to","lastIndexOf","substring"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACnB,KAAKA,KADc;AAAA;;AAG/BC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,QAAvB;AACA,QAAIA,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAAX,CAAoBC,GAApB,CAAyBC,IAAD,iBAAc,QAAC,OAAD;AAAkE,MAAA,QAAQ,EAAEA,IAAI,CAACC,QAAjF;AAA2F,MAAA,IAAI,EAAKD,IAAI,CAACE,IAAL,KAAY,EAAb,GAAiB,MAAjB,GAAwB,MAA3H;AACG,MAAA,iBAAiB,EAAIF,IAAI,CAACG,iBAD7B;AAEG,MAAA,OAAO,EAAIH,IAAI,CAACI,OAFnB;AAGG,MAAA,IAAI,EAAIC,cAAc,CAAE,GAAEL,IAAI,CAACM,QAAS,EAAlB,CAHzB;AAIG,MAAA,MAAM,EAAIC,uBAAuB,CAACP,IAAI,CAACG,iBAAN,EAAyBH,IAAI,CAACQ,MAA9B,EAAsCR,IAAI,CAACS,SAA3C;AAJpC,OAAc,YAAa,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAZ,GAAqCC,IAAI,CAACC,MAAL,EAAnD;AAAA;AAAA;AAAA;AAAA,YAAtC,CAAf;AAKA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKf;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAf8B;;AAkBnC,eAAeL,WAAf;;AAEA,SAASY,cAAT,CAAwBS,QAAxB,EAAyC;AACrClB,EAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;AACA,MAAIC,IAAI,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;AACA,MAAIC,EAAE,GAAGF,IAAI,CAACG,WAAL,CAAiB,GAAjB,CAAT;AACA,SAAOH,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkBF,EAAlB,CAAP;AACH;;AAED,SAASV,uBAAT,CAAiCJ,iBAAjC,EAA6DK,MAA7D,EAA6EC,SAA7E,EACA;AACI,MAAGN,iBAAiB,IAAIK,MAAxB,EAAgC,OAAO,MAAP,CAAhC,KACK,IAAGL,iBAAiB,IAAIM,SAAxB,EAAmC,OAAO,UAAP,CAAnC,KACA,OAAO,UAAP;AACR","sourcesContent":["import { Component } from \"react\";\r\nimport Message from \"./Message/Message\";\r\n\r\nimport \"./ListMessage.css\"\r\n\r\nclass ListMessage extends Component{\r\n    props:any = this.props\r\n\r\n    render(){\r\n        console.log(this.props.messages)\r\n        let messages = this.props.messages.map((data:any) => <Message key={\"message\" + (new Date()).getTime() + Math.random()} category={data.category} type = {(data.file===\"\")?\"text\":\"file\"}  \r\n                                                                isIncomingMessage = {data.isIncomingMessage}\r\n                                                                message = {data.message} \r\n                                                                time = {getMessageTime(`${data.dateTime}`)}  \r\n                                                                status = {getMessageSendingStatus(data.isIncomingMessage, data.isSend, data.isReceive)} />)\r\n        return (\r\n            <div className=\"list-message\">\r\n                {messages}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListMessage\r\n\r\nfunction getMessageTime(datetime:string) {\r\n    console.log(datetime)\r\n    let time = datetime.split(\"T\")[1]\r\n    let to = time.lastIndexOf(\":\")\r\n    return time.substring(0, to);\r\n}\r\n\r\nfunction getMessageSendingStatus(isIncomingMessage: boolean, isSend:boolean, isReceive:boolean)\r\n{\r\n    if(isIncomingMessage && isSend) return \"send\";\r\n    else if(isIncomingMessage && isReceive) return \"received\"\r\n    else return \"not-send\"\r\n}\r\n"]},"metadata":{},"sourceType":"module"}