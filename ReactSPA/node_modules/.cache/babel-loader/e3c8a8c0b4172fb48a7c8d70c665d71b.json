{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\HomePage\\\\Body\\\\RightSide\\\\Chat\\\\ListMessage\\\\Message\\\\Message.tsx\";\nimport { Component } from \"react\";\nimport isWaiting from \"./../../../../../../../../wwwroot/images/important_2.png\";\nimport tickDark from \"./../../../../../../../../wwwroot/images/tick_dark.png\";\nimport doubleTickReceived from \"./../../../../../../../../wwwroot/images/double_tick_dark_1.png\";\nimport doubleTickRead from \"./../../../../../../../../wwwroot/images/double_tick_blue_2.png\";\nimport \"./Message.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Message extends Component {\n  constructor(...args) {\n    super(...args);\n    this.props = this.props;\n    this.messageOptionsAreDisplayed = false;\n\n    this.onShowHideMessageOption = event => {\n      var div = event.currentTarget.nextElementSibling;\n      this.messageOptionsAreDisplayed = !this.messageOptionsAreDisplayed;\n      if (this.messageOptionsAreDisplayed === true) div.style.setProperty(\"display\", \"none\");else div.style.setProperty(\"display\", \"flex\");\n    };\n  }\n\n  render() {\n    var {\n      type,\n      isIncomingMessage,\n      isTransfered,\n      isTagged,\n      taggetMessageData,\n      message,\n      time,\n      status,\n      onTaggedMessage,\n      onEnableDeletion,\n      onShareMessage\n    } = this.props;\n    var styleImage = {\n      width: 50,\n      height: 50\n    };\n    var styleDescription = {\n      flex: \"1 0 auto\"\n    };\n    console.log(taggetMessageData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `prev-message ${isIncomingMessage === true ? \"incoming-message\" : \"outgoing-message\"}`,\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: this.onShowHideMessageOption,\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prev-message-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: onTaggedMessage,\n            children: \" Reply \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: onEnableDeletion,\n            children: \" Delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: onShareMessage,\n            children: \" Shared \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prev-message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), isTransfered === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"transfered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true) : isTagged === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: styleDescription,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"short message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                style: styleImage,\n                src: \"\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), type === \"file\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Image file can be pdf, audio, video, image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 44\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sending-information\",\n          children: [isIncomingMessage === true ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"send-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: outGoingsendImage(status),\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 63\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"send-datetime\",\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Message;\n\nfunction outGoingsendImage(status) {\n  switch (status) {\n    case \"send\":\n      return tickDark;\n\n    case \"received\":\n      return doubleTickReceived;\n\n    case \"read\":\n      return doubleTickRead;\n\n    default:\n      return isWaiting;\n  }\n\n  ;\n}","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/HomePage/Body/RightSide/Chat/ListMessage/Message/Message.tsx"],"names":["Component","isWaiting","tickDark","doubleTickReceived","doubleTickRead","Message","props","messageOptionsAreDisplayed","onShowHideMessageOption","event","div","currentTarget","nextElementSibling","style","setProperty","render","type","isIncomingMessage","isTransfered","isTagged","taggetMessageData","message","time","status","onTaggedMessage","onEnableDeletion","onShareMessage","styleImage","width","height","styleDescription","flex","console","log","outGoingsendImage"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\n\r\nimport isWaiting from \"./../../../../../../../../wwwroot/images/important_2.png\"\r\nimport tickDark from \"./../../../../../../../../wwwroot/images/tick_dark.png\"\r\nimport doubleTickReceived from \"./../../../../../../../../wwwroot/images/double_tick_dark_1.png\"\r\nimport doubleTickRead from \"./../../../../../../../../wwwroot/images/double_tick_blue_2.png\"\r\n\r\nimport \"./Message.css\"\r\n\r\n\r\nclass Message extends Component{\r\n    props:any = this.props\r\n    messageOptionsAreDisplayed = false\r\n    onShowHideMessageOption = (event:React.MouseEvent<HTMLSpanElement, MouseEvent>) => \r\n    {\r\n        var div = event.currentTarget.nextElementSibling as HTMLDivElement\r\n        this.messageOptionsAreDisplayed = !this.messageOptionsAreDisplayed\r\n        if(this.messageOptionsAreDisplayed === true)\r\n            div.style.setProperty(\"display\", \"none\")\r\n        else\r\n            div.style.setProperty(\"display\", \"flex\")\r\n    }\r\n\r\n    render(){\r\n        var {\r\n            type, isIncomingMessage, \r\n            isTransfered, isTagged, \r\n            taggetMessageData, message, \r\n            time, status, \r\n            onTaggedMessage, onEnableDeletion, \r\n            onShareMessage} = this.props\r\n        var styleImage = {\r\n            width: 50,\r\n            height: 50\r\n        }\r\n        var styleDescription = {\r\n            flex: \"1 0 auto\"\r\n        }\r\n        console.log(taggetMessageData)\r\n        return (\r\n            <div className ={`prev-message ${(isIncomingMessage===true)?\"incoming-message\":\"outgoing-message\"}`}>\r\n                <> \r\n                    <span onClick = {this.onShowHideMessageOption}>...</span>\r\n                    <div className=\"prev-message-option\">\r\n                        <span onClick = {onTaggedMessage}> Reply </span>\r\n                        <span onClick = {onEnableDeletion}> Delete </span>\r\n                        <span onClick = {onShareMessage}> Shared </span>\r\n                    </div>\r\n                </>\r\n                <>\r\n                    <div className=\"prev-message-content\">\r\n                        <div>\r\n                            <span>username</span>\r\n                            {((isTransfered===true)?<>\r\n                                <img src=\"\" alt=\"\" />\r\n                                <span>transfered</span>\r\n                            </>:((isTagged === true)?<>\r\n                                <div style= {styleDescription}>\r\n                                    <img src=\"\" alt=\"\" />\r\n                                    <span>short message</span>\r\n                                </div>\r\n                                <img style = {styleImage} src=\"\" alt=\"\" />\r\n                            </>:null))}\r\n                        </div>\r\n                        {(type === \"file\")?<div>\r\n                            Image file can be pdf, audio, video, image \r\n                        </div>:null}\r\n                        <span>{message}</span>\r\n                    </div>\r\n                    <div className=\"sending-information\">\r\n                        {\r\n                            (isIncomingMessage === true)?null:<span className=\"send-image\">\r\n                            <img src={outGoingsendImage(status)} alt=\"\" />\r\n                            </span>\r\n                        }\r\n                        <span className=\"send-datetime\">{time}</span>\r\n                    </div>\r\n                    {/* <div className=\"failed-sending\">\r\n                        {\r\n                            (isIncomingMessage === true)?null:<span className=\"failed-sending-image\">\r\n                            <img src={important2} alt=\"\" />\r\n                            </span>\r\n                        }\r\n                    </div> */}\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message\r\n\r\nfunction outGoingsendImage(status:string) {\r\n        switch (status) {\r\n            case \"send\":\r\n                return tickDark;\r\n            case \"received\":\r\n                return doubleTickReceived\r\n            case \"read\":\r\n                return doubleTickRead\r\n            default:\r\n                return isWaiting;\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}