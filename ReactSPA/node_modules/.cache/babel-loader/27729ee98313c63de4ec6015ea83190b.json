{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\HomePage\\\\HomePage.tsx\";\nimport { Component } from \"react\";\nimport { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken } from \"firebase/messaging\";\nimport Body from \"./Body/Body\";\nimport Head from \"./Head/Head\";\nimport Cookies from 'universal-cookie';\nimport { requestWithoutBody } from \"../../shared/utils/functions\";\nimport firebaseSettings from \"./../../../firebasesettings.json\";\nimport settings from './../../../settings.json';\nimport \"./HomePage.css\"; // \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.cookies = new Cookies();\n    this.settings = settings;\n    this._id = \"\";\n    this.state = {\n      displayReceiverInformation: false,\n      receiverProfile: {\n        id: this._id,\n        email: \"\",\n        name: \"\",\n        category: \"person\",\n        image: \"\"\n      },\n      senderProfile: {\n        id: this._id,\n        email: \"\",\n        name: \"\",\n        category: \"person\",\n        image: \"\"\n      }\n    };\n    this.firebaseSettings = firebaseSettings;\n    this.app = null;\n    this.messaging = null;\n    this.props = this.props;\n\n    this.sucessGetMessages = response => {\n      console.log(response);\n    };\n\n    this.errorGetMessage = error => {};\n\n    this.loadData = () => {\n      let userId = this.cookies.get(\"userId\");\n    };\n\n    this.successGetProfileFunction = result => {\n      let _keys = Object.keys(result);\n\n      if (_keys.includes(\"userProfileId\")) {\n        this.setState({\n          senderProfile: {\n            id: result.userProfileId,\n            identity: result.userProfile.identity,\n            name: result.userProfile.username,\n            category: \"person\",\n            image: \"\"\n          }\n        });\n        let date = new Date();\n        let expirationDate = new Date();\n        expirationDate.setMinutes(date.getMinutes() + 7 * 24 * 60);\n        this.cookies.set(\"userProfileId\", result.userProfileId, {\n          sameSite: true,\n          expires: expirationDate\n        });\n      } else {\n        //Replace by modal\n        alert(\"Sorry we are not able to get some important information. We inform our team about it.\");\n      }\n    };\n\n    this.errorGetProfileFunction = error => {\n      //Replace with model or alert zone\n      alert(\"Sorry we are not able to perform operation. Check your internet connexion\");\n    };\n\n    this.componentDidMount = () => {\n      var _this$cookies$get;\n\n      //Get userprofileid\n      requestWithoutBody(`${this.settings.host}/api/DeviceUsed?devicePlatform=4`, \"PUT\", (_this$cookies$get = this.cookies.get('token')) !== null && _this$cookies$get !== void 0 ? _this$cookies$get : \"\", this.successGetProfileFunction, this.errorGetProfileFunction);\n      this.app = initializeApp(this.firebaseSettings.firebaseConfig);\n      this.messaging = getMessaging();\n      var keys = {\n        vapidKey: this.firebaseSettings.VAPID\n      };\n      getToken(keys).then(currentToken => {\n        if (currentToken) {// Send the token to your server and update the UI if necessary\n          // ...\n        } else {\n          // Show permission request UI\n          console.log('No registration token available. Request permission to generate one.'); // ...\n        }\n      }).catch(err => {\n        console.log('An error occurred while retrieving token. ', err); // ...\n      });\n      ;\n    };\n\n    this.getReceiverInformation = (identity, id, name, category) => {\n      if (identity !== \"\") //|| id !== \"\" || name !== \"\"\n        {\n          this.setState({\n            displayReceiverInformation: true\n          });\n          this.setState({\n            receiverProfile: {\n              identity,\n              id,\n              name,\n              category,\n              image: \"\"\n            }\n          });\n        }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        displayReceiverInformation: this.state.displayReceiverInformation,\n        receiverProfile: this.state.receiverProfile,\n        senderProfile: this.state.senderProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Body, {\n        getReceiverInformation: this.getReceiverInformation,\n        userProfileId: this.state.senderProfile.id,\n        authToken: this.cookies.get(\"token\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/HomePage/HomePage.tsx"],"names":["Component","initializeApp","getMessaging","getToken","Body","Head","Cookies","requestWithoutBody","firebaseSettings","settings","HomePage","cookies","_id","state","displayReceiverInformation","receiverProfile","id","email","name","category","image","senderProfile","app","messaging","props","sucessGetMessages","response","console","log","errorGetMessage","error","loadData","userId","get","successGetProfileFunction","result","_keys","Object","keys","includes","setState","userProfileId","identity","userProfile","username","date","Date","expirationDate","setMinutes","getMinutes","set","sameSite","expires","alert","errorGetProfileFunction","componentDidMount","host","firebaseConfig","vapidKey","VAPID","then","currentToken","catch","err","getReceiverInformation","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\n\r\nimport { initializeApp, FirebaseApp } from \"firebase/app\";\r\nimport { getMessaging, getToken, Messaging } from \"firebase/messaging\";\r\n\r\nimport Body from \"./Body/Body\";\r\nimport Head from \"./Head/Head\";\r\nimport Cookies from 'universal-cookie';\r\nimport { requestWithBody, requestWithoutBody } from \"../../shared/utils/functions\";\r\n\r\nimport firebaseSettings from \"./../../../firebasesettings.json\"\r\nimport settings from './../../../settings.json';\r\n\r\nimport \"./HomePage.css\"\r\n// \r\nclass HomePage extends Component\r\n{\r\n    cookies = new Cookies()\r\n    settings = settings\r\n    _id:string|number = \"\"\r\n    state = {\r\n        displayReceiverInformation : false,\r\n        receiverProfile : {\r\n            id : this._id,\r\n            email: \"\",\r\n            name: \"\",\r\n            category: \"person\",\r\n            image: \"\"\r\n        },\r\n        senderProfile : {\r\n            id : this._id,\r\n            email: \"\",\r\n            name: \"\",\r\n            category: \"person\",\r\n            image: \"\"\r\n        }\r\n    }\r\n\r\n    firebaseSettings = firebaseSettings\r\n\r\n    app:FirebaseApp |null = null\r\n    messaging:Messaging|null = null\r\n\r\n    props:any = this.props\r\n\r\n    sucessGetMessages = (response:any) =>{\r\n        console.log(response)\r\n    }\r\n\r\n    errorGetMessage = (error:any) =>{\r\n\r\n    }\r\n\r\n    loadData = () => {\r\n        let userId = this.cookies.get(\"userId\")\r\n    }\r\n\r\n    successGetProfileFunction = (result:any) => {\r\n        let _keys = Object.keys(result);\r\n        if(_keys.includes(\"userProfileId\"))\r\n        {\r\n            this.setState({senderProfile : {\r\n                id : result.userProfileId,\r\n                identity: result.userProfile.identity,\r\n                name: result.userProfile.username,\r\n                category: \"person\",\r\n                image: \"\"\r\n            }})\r\n            let date = new Date()\r\n            let expirationDate = new Date()\r\n            expirationDate.setMinutes(date.getMinutes() + 7 * 24 * 60)  \r\n            this.cookies.set(\"userProfileId\", result.userProfileId, {sameSite: true, expires:expirationDate})\r\n        }\r\n        else\r\n        {\r\n            //Replace by modal\r\n            alert(\"Sorry we are not able to get some important information. We inform our team about it.\")\r\n        }\r\n    }\r\n\r\n    errorGetProfileFunction = (error:any) => {\r\n        //Replace with model or alert zone\r\n        alert(\"Sorry we are not able to perform operation. Check your internet connexion\")\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //Get userprofileid\r\n        requestWithoutBody(`${this.settings.host}/api/DeviceUsed?devicePlatform=4`, \"PUT\", this.cookies.get('token')??\"\", this.successGetProfileFunction, this.errorGetProfileFunction)\r\n        this.app = initializeApp(this.firebaseSettings.firebaseConfig)\r\n        this.messaging = getMessaging();\r\n        \r\n        var keys:any = {vapidKey: this.firebaseSettings.VAPID}\r\n\r\n        getToken(keys).then((currentToken) => {\r\n            if (currentToken) {\r\n              // Send the token to your server and update the UI if necessary\r\n              // ...\r\n            } else {\r\n              // Show permission request UI\r\n              console.log('No registration token available. Request permission to generate one.');\r\n              // ...\r\n            }\r\n          }).catch((err) => {\r\n            console.log('An error occurred while retrieving token. ', err);\r\n            // ...\r\n          });;\r\n\r\n    }\r\n\r\n    getReceiverInformation = (identity:string, id:number|string, name:string, category:string|number) => {\r\n        if(identity !== \"\" )//|| id !== \"\" || name !== \"\"\r\n        {\r\n            this.setState({displayReceiverInformation: true})\r\n            this.setState({receiverProfile: {identity, id, name, category, image : \"\"}})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"home-page\">\r\n                <Head displayReceiverInformation = {this.state.displayReceiverInformation} receiverProfile = {this.state.receiverProfile} senderProfile = {this.state.senderProfile} />\r\n                <Body getReceiverInformation = {this.getReceiverInformation} userProfileId={this.state.senderProfile.id} authToken = {this.cookies.get(\"token\")} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}