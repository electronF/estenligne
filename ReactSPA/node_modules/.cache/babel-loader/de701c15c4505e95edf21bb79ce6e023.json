{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\src\\\\components\\\\Pages\\\\HomePage\\\\Body\\\\LeftSide\\\\ListConversation\\\\ListConversation.tsx\";\nimport { Component } from \"react\";\nimport \"./ListConversation.css\";\nimport discussions from \"./conversation.json\";\nimport Conversation from \"./Conversation/Conversation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListConversation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.element = null;\n    this.props = this.props;\n    this.state = {\n      discussions,\n      prevSelectedDiscussion: this.element\n    };\n\n    this.setFocus = (event, id, email, category) => {\n      let prevSelectedDiscussion = this.state.prevSelectedDiscussion;\n      if (prevSelectedDiscussion !== null) prevSelectedDiscussion.classList.remove(\"selected-discussion\");\n      prevSelectedDiscussion = event.currentTarget;\n      prevSelectedDiscussion.classList.add(\"selected-discussion\");\n      this.setState({\n        prevSelectedDiscussion\n      });\n\n      try {\n        this.props.openDiscussion(email, id, category);\n      } catch (error) {}\n    };\n  }\n\n  render() {\n    console.log(this.props.openDiscussion);\n    let discutionList = this.state.discussions.map(data => /*#__PURE__*/_jsxDEV(Conversation, {\n      onClick: event => this.setFocus(event, data.id, data.email, data.category),\n      data: data\n    }, data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 66\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"discussion\",\n      children: discutionList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListConversation;","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/src/components/Pages/HomePage/Body/LeftSide/ListConversation/ListConversation.tsx"],"names":["Component","discussions","Conversation","ListConversation","element","props","state","prevSelectedDiscussion","setFocus","event","id","email","category","classList","remove","currentTarget","add","setState","openDiscussion","error","render","console","log","discutionList","map","data"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAO,wBAAP;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;;AAEA,MAAMC,gBAAN,SAA+BH,SAA/B,CACA;AAAA;AAAA;AAAA,SAEII,OAFJ,GAEkB,IAFlB;AAAA,SAGIC,KAHJ,GAGgB,KAAKA,KAHrB;AAAA,SAIIC,KAJJ,GAIY;AACJL,MAAAA,WADI;AAEJM,MAAAA,sBAAsB,EAAC,KAAKH;AAFxB,KAJZ;;AAAA,SASII,QATJ,GASe,CAACC,KAAD,EAAYC,EAAZ,EAA8BC,KAA9B,EAA4CC,QAA5C,KAAuE;AAC9E,UAAIL,sBAAsB,GAAG,KAAKD,KAAL,CAAWC,sBAAxC;AACA,UAAGA,sBAAsB,KAAK,IAA9B,EACIA,sBAAsB,CAACM,SAAvB,CAAiCC,MAAjC,CAAwC,qBAAxC;AAEJP,MAAAA,sBAAsB,GAAGE,KAAK,CAACM,aAA/B;AACAR,MAAAA,sBAAsB,CAACM,SAAvB,CAAiCG,GAAjC,CAAqC,qBAArC;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA;AAAD,OAAd;;AAEA,UAAI;AACA,aAAKF,KAAL,CAAWa,cAAX,CAA0BP,KAA1B,EAAiCD,EAAjC,EAAqCE,QAArC;AACH,OAFD,CAEE,OAAOO,KAAP,EAAc,CAAE;AACrB,KArBL;AAAA;;AAuBIC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWa,cAAvB;AACA,QAAIK,aAAa,GAAG,KAAKjB,KAAL,CAAWL,WAAX,CAAuBuB,GAAvB,CAA4BC,IAAD,iBAAU,QAAC,YAAD;AAA4B,MAAA,OAAO,EAAGhB,KAAD,IAAe,KAAKD,QAAL,CAAcC,KAAd,EAAqBgB,IAAI,CAACf,EAA1B,EAA8Be,IAAI,CAACd,KAAnC,EAA0Cc,IAAI,CAACb,QAA/C,CAApD;AAA8G,MAAA,IAAI,EAAIa;AAAtH,OAAmBA,IAAI,CAACf,EAAxB;AAAA;AAAA;AAAA;AAAA,YAArC,CAApB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKa;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA/BL;;AAkCA,eAAepB,gBAAf","sourcesContent":["import { Component } from \"react\";\r\n\r\nimport \"./ListConversation.css\"\r\n\r\nimport discussions from \"./conversation.json\"\r\nimport Conversation from \"./Conversation/Conversation\";\r\n\r\nclass ListConversation extends Component\r\n{\r\n\r\n    element:any = null\r\n    props:any = this.props\r\n    state = {\r\n        discussions,\r\n        prevSelectedDiscussion:this.element\r\n    }\r\n\r\n    setFocus = (event:any, id:number|string, email:string, category:number|string) => {\r\n        let prevSelectedDiscussion = this.state.prevSelectedDiscussion\r\n        if(prevSelectedDiscussion !== null )\r\n            prevSelectedDiscussion.classList.remove(\"selected-discussion\")\r\n        \r\n        prevSelectedDiscussion = event.currentTarget\r\n        prevSelectedDiscussion.classList.add(\"selected-discussion\")\r\n        this.setState({prevSelectedDiscussion})\r\n\r\n        try {\r\n            this.props.openDiscussion(email, id, category)   \r\n        } catch (error) {}\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.openDiscussion)\r\n        let discutionList = this.state.discussions.map((data) => <Conversation key={data.id} onClick={(event:any) => this.setFocus(event, data.id, data.email, data.category)} data = {data}/>)\r\n        return (\r\n            <div className=\"discussion\">\r\n                {discutionList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListConversation"]},"metadata":{},"sourceType":"module"}