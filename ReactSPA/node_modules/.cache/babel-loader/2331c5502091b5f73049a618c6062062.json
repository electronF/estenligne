{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\HomePage\\\\Body\\\\RightSide\\\\Chat\\\\ListMessage\\\\ListMessage.tsx\";\nimport { Component } from \"react\";\nimport Message from \"./Message/Message\";\n// import doc from \"./../../../../../../../wwwroot/documents/How_to_win_friends_and_influence_people.pdf\";\n// import grimm from \"./../../../../../../../wwwroot/videos/GRIMMS1EP5.mp4\"\nimport \"./ListMessage.css\";\nimport { getMessageTime } from \"../../../../../../shared/utils/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListMessage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.props = this.props;\n  }\n\n  render() {\n    var audioFile = {\n      id: 1,\n      \"name\": `GRIMMS1EP5.mp4`,\n      \"size\": 170 * 1024 * 1024,\n      \"purpose\": 0,\n      \"dateUploaded\": \"2021-10-05T22:22:35.093Z\",\n      \"dateDeleted\": \"2021-10-05T22:22:35.093Z\"\n    }; // var videoFile:FileDTO = {\n    //     id: 1,\n    //     \"name\": `${root}/GRIMMS1EP5.mp4`,\n    //     \"size\": 170*1024*1024,\n    //     'src': grimm,\n    //     \"purpose\": 0,\n    //     \"dateUploaded\": \"2021-10-05T22:22:35.093Z\",\n    //     \"dateDeleted\": \"2021-10-05T22:22:35.093Z\"\n    // }\n    // {(data.file===\"\" || data.file === null)?\"text\":\"file\"} \n\n    let messages = this.props.messages.map(data => /*#__PURE__*/_jsxDEV(Message, {\n      category: data.category,\n      type: \"file\",\n      isIncomingMessage: data.isIncomingMessage,\n      message: data.message,\n      file: data.file,\n      isTransfered: data.isTransfered,\n      isTagged: data.isTagget,\n      taggetMessageData: data.taggedMessage,\n      time: getMessageTime(`${data.dateTime}`),\n      status: getMessageSendingStatus(data.isIncomingMessage, data.isSend, data.isReceive, data.isRead),\n      onTaggedMessage: this.props.onTaggedMessage,\n      onEnableDeletion: this.props.onEnableDeletion,\n      onShareMessage: this.props.onShareMessage\n    }, \"message\" + new Date().getTime() + Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 69\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-message\",\n      children: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction getMessageSendingStatus(isIncomingMessage, isSend, isReceive, isRead) {\n  if (!isIncomingMessage && isSend && isReceive && isRead) return \"read\";else if (!isIncomingMessage && isSend && isReceive) return \"received\";else if (!isIncomingMessage && isSend) return \"send\";else return \"not-send\";\n}\n\nexport default ListMessage;","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/HomePage/Body/RightSide/Chat/ListMessage/ListMessage.tsx"],"names":["Component","Message","getMessageTime","ListMessage","props","render","audioFile","id","messages","map","data","category","isIncomingMessage","message","file","isTransfered","isTagget","taggedMessage","dateTime","getMessageSendingStatus","isSend","isReceive","isRead","onTaggedMessage","onEnableDeletion","onShareMessage","Date","getTime","Math","random"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAMA;AAEA;AAGA,OAAO,mBAAP;AACA,SAASC,cAAT,QAA+B,0CAA/B;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAC/BI,KAD+B,GACnB,KAAKA,KADc;AAAA;;AAG/BC,EAAAA,MAAM,GAAE;AACJ,QAAIC,SAAiB,GAAG;AACpBC,MAAAA,EAAE,EAAE,CADgB;AAEpB,cAAS,gBAFW;AAGpB,cAAQ,MAAI,IAAJ,GAAS,IAHG;AAIpB,iBAAW,CAJS;AAKpB,sBAAgB,0BALI;AAMpB,qBAAe;AANK,KAAxB,CADI,CASJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAIC,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAAX,CAAoBC,GAApB,CAAyBC,IAAD,iBAAqB,QAAC,OAAD;AAAkE,MAAA,QAAQ,EAAEA,IAAI,CAACC,QAAjF;AAA2F,MAAA,IAAI,EAAG,MAAlG;AACJ,MAAA,iBAAiB,EAAID,IAAI,CAACE,iBADtB;AAEJ,MAAA,OAAO,EAAIF,IAAI,CAACG,OAFZ;AAGJ,MAAA,IAAI,EAAIH,IAAI,CAACI,IAHT;AAIJ,MAAA,YAAY,EAAIJ,IAAI,CAACK,YAJjB;AAKJ,MAAA,QAAQ,EAAIL,IAAI,CAACM,QALb;AAMJ,MAAA,iBAAiB,EAAIN,IAAI,CAACO,aANtB;AAOJ,MAAA,IAAI,EAAIf,cAAc,CAAE,GAAEQ,IAAI,CAACQ,QAAS,EAAlB,CAPlB;AAQJ,MAAA,MAAM,EAAIC,uBAAuB,CAACT,IAAI,CAACE,iBAAN,EAAyBF,IAAI,CAACU,MAA9B,EAAsCV,IAAI,CAACW,SAA3C,EAAsDX,IAAI,CAACY,MAA3D,CAR7B;AASJ,MAAA,eAAe,EAAI,KAAKlB,KAAL,CAAWmB,eAT1B;AAUJ,MAAA,gBAAgB,EAAI,KAAKnB,KAAL,CAAWoB,gBAV3B;AAWJ,MAAA,cAAc,EAAI,KAAKpB,KAAL,CAAWqB;AAXzB,OAAc,YAAa,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAZ,GAAqCC,IAAI,CAACC,MAAL,EAAnD;AAAA;AAAA;AAAA;AAAA,YAA7C,CAAf;AAaA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKrB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAxC8B;;AA4CnC,SAASW,uBAAT,CAAiCP,iBAAjC,EAA6DQ,MAA7D,EAA6EC,SAA7E,EAAgGC,MAAhG,EACA;AACI,MAAG,CAACV,iBAAD,IAAsBQ,MAAtB,IAAgCC,SAAhC,IAA6CC,MAAhD,EAAwD,OAAO,MAAP,CAAxD,KACK,IAAG,CAACV,iBAAD,IAAsBQ,MAAtB,IAAgCC,SAAnC,EAA8C,OAAO,UAAP,CAA9C,KACA,IAAG,CAACT,iBAAD,IAAsBQ,MAAzB,EAAiC,OAAO,MAAP,CAAjC,KACA,OAAO,UAAP;AACR;;AAED,eAAejB,WAAf","sourcesContent":["import { Component } from \"react\";\r\nimport Message from \"./Message/Message\";\r\n\r\nimport { MessageDTO, FileDTO } from \"../../../../../../shared/utils/Types\";\r\n\r\nimport kaputZosky from \"./../../../../../../../wwwroot/images/kaput&zosky.jpg\";\r\n\r\n// import doc from \"./../../../../../../../wwwroot/documents/How_to_win_friends_and_influence_people.pdf\";\r\n\r\n// import grimm from \"./../../../../../../../wwwroot/videos/GRIMMS1EP5.mp4\"\r\n\r\n\r\nimport \"./ListMessage.css\"\r\nimport { getMessageTime } from \"../../../../../../shared/utils/functions\";\r\n\r\nclass ListMessage extends Component{\r\n    props:any = this.props\r\n    \r\n    render(){\r\n        var audioFile:FileDTO = {\r\n            id: 1,\r\n            \"name\": `GRIMMS1EP5.mp4`,\r\n            \"size\": 170*1024*1024,\r\n            \"purpose\": 0,\r\n            \"dateUploaded\": \"2021-10-05T22:22:35.093Z\",\r\n            \"dateDeleted\": \"2021-10-05T22:22:35.093Z\"\r\n        } \r\n        // var videoFile:FileDTO = {\r\n        //     id: 1,\r\n        //     \"name\": `${root}/GRIMMS1EP5.mp4`,\r\n        //     \"size\": 170*1024*1024,\r\n        //     'src': grimm,\r\n        //     \"purpose\": 0,\r\n        //     \"dateUploaded\": \"2021-10-05T22:22:35.093Z\",\r\n        //     \"dateDeleted\": \"2021-10-05T22:22:35.093Z\"\r\n        // }\r\n        // {(data.file===\"\" || data.file === null)?\"text\":\"file\"} \r\n        let messages = this.props.messages.map((data:MessageDTO) => <Message key={\"message\" + (new Date()).getTime() + Math.random()} category={data.category} type = \"file\" \r\n                                                                isIncomingMessage = {data.isIncomingMessage}\r\n                                                                message = {data.message} \r\n                                                                file = {data.file}\r\n                                                                isTransfered = {data.isTransfered}\r\n                                                                isTagged = {data.isTagget}\r\n                                                                taggetMessageData = {data.taggedMessage}\r\n                                                                time = {getMessageTime(`${data.dateTime}`)}  \r\n                                                                status = {getMessageSendingStatus(data.isIncomingMessage, data.isSend, data.isReceive, data.isRead)}\r\n                                                                onTaggedMessage = {this.props.onTaggedMessage}\r\n                                                                onEnableDeletion = {this.props.onEnableDeletion}\r\n                                                                onShareMessage = {this.props.onShareMessage}\r\n                                                             />)\r\n        return (\r\n            <div className=\"list-message\">\r\n                {messages}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction getMessageSendingStatus(isIncomingMessage: boolean, isSend:boolean, isReceive:boolean, isRead:boolean)\r\n{\r\n    if(!isIncomingMessage && isSend && isReceive && isRead) return \"read\"\r\n    else if(!isIncomingMessage && isSend && isReceive) return \"received\";\r\n    else if(!isIncomingMessage && isSend) return \"send\"\r\n    else return \"not-send\"\r\n}\r\n\r\nexport default ListMessage\r\n\r\n"]},"metadata":{},"sourceType":"module"}