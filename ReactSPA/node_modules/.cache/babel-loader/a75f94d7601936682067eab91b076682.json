{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ketis\\\\Documents\\\\estenligne\\\\ReactSPA\\\\src\\\\components\\\\Pages\\\\HomePage\\\\HomePage.tsx\";\nimport { Component } from \"react\";\nimport Body from \"./Body/Body\";\nimport Head from \"./Head/Head\";\nimport Cookies from 'universal-cookie';\nimport { postOrUpdateRequest } from \"../../shared/utils/functions\";\nimport settings from './../../../settings.json';\nimport \"./HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.cookies = new Cookies();\n    this.settings = settings;\n    this._id = \"\";\n    this.state = {\n      displayReceiverInformation: false,\n      receiverProfile: {\n        id: this._id,\n        email: \"\",\n        name: \"\",\n        category: \"person\",\n        image: \"\"\n      },\n      senderProfile: {\n        id: this._id,\n        email: \"\",\n        name: \"\",\n        category: \"person\",\n        image: \"\"\n      }\n    };\n    this.props = this.props;\n\n    this.sucessGetMessages = response => {\n      console.log(response);\n    };\n\n    this.errorGetMessage = error => {};\n\n    this.loadData = () => {\n      let userId = this.cookies.get(\"userId\");\n    };\n\n    this.successGetProfileFunction = result => {\n      let _keys = Object.keys(result);\n\n      if (_keys.includes(\"userProfileId\")) {\n        this.setState({\n          senderProfile: {\n            id: result.userProfileId,\n            identity: result.identity,\n            name: result.username,\n            category: \"person\",\n            image: \"\"\n          }\n        });\n        let date = new Date();\n        let expirationDate = new Date();\n        expirationDate.setMinutes(date.getMinutes() + 7 * 24 * 60);\n        this.cookies.set(\"userProfileId\", result.userProfileId, {\n          sameSite: true,\n          expires: expirationDate\n        });\n      } else {\n        //Replace by modal\n        alert(\"Sorry we are not able to get some important information. We inform our team about it.\");\n      }\n    };\n\n    this.errorGetProfileFunction = error => {\n      alert(\"Sorry we are not able to perform operation. Check your internet connexion\");\n    };\n\n    this.componentDidMount = () => {\n      var _this$cookies$get;\n\n      //Get userprofileid\n      postOrUpdateRequest(`${this.settings.host}/api/DeviceUsed?devicePlatform=4`, \"PUT\", {}, (_this$cookies$get = this.cookies.get('token')) !== null && _this$cookies$get !== void 0 ? _this$cookies$get : \"\", this.successGetProfileFunction, this.errorGetProfileFunction);\n    };\n\n    this.getReceiverInformation = (identity, id, name, category) => {\n      if (identity !== \"\") //|| id !== \"\" || name !== \"\"\n        {\n          this.setState({\n            displayReceiverInformation: true\n          });\n          this.setState({\n            receiverProfile: {\n              identity,\n              id,\n              name,\n              category,\n              image: \"\"\n            }\n          });\n        }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        displayReceiverInformation: this.state.displayReceiverInformation,\n        receiverProfile: this.state.receiverProfile,\n        senderProfile: this.state.senderProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Body, {\n        getReceiverInformation: this.getReceiverInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/ketis/Documents/estenligne/ReactSPA/src/components/Pages/HomePage/HomePage.tsx"],"names":["Component","Body","Head","Cookies","postOrUpdateRequest","settings","HomePage","cookies","_id","state","displayReceiverInformation","receiverProfile","id","email","name","category","image","senderProfile","props","sucessGetMessages","response","console","log","errorGetMessage","error","loadData","userId","get","successGetProfileFunction","result","_keys","Object","keys","includes","setState","userProfileId","identity","username","date","Date","expirationDate","setMinutes","getMinutes","set","sameSite","expires","alert","errorGetProfileFunction","componentDidMount","host","getReceiverInformation","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport Body from \"./Body/Body\";\r\nimport Head from \"./Head/Head\";\r\nimport Cookies from 'universal-cookie';\r\nimport { postOrUpdateRequest, getOrDeleteRequest } from \"../../shared/utils/functions\";\r\nimport settings from './../../../settings.json';\r\n\r\nimport \"./HomePage.css\"\r\n\r\nclass HomePage extends Component\r\n{\r\n    cookies = new Cookies()\r\n    settings = settings\r\n    _id:string|number = \"\"\r\n    state = {\r\n        displayReceiverInformation : false,\r\n        receiverProfile : {\r\n            id : this._id,\r\n            email: \"\",\r\n            name: \"\",\r\n            category: \"person\",\r\n            image: \"\"\r\n        },\r\n        senderProfile : {\r\n            id : this._id,\r\n            email: \"\",\r\n            name: \"\",\r\n            category: \"person\",\r\n            image: \"\"\r\n        }\r\n    }\r\n\r\n    props:any = this.props\r\n\r\n    sucessGetMessages = (response:any) =>{\r\n        console.log(response)\r\n    }\r\n\r\n    errorGetMessage = (error:any) =>{\r\n\r\n    }\r\n\r\n    loadData = () => {\r\n        let userId = this.cookies.get(\"userId\")\r\n    }\r\n\r\n    successGetProfileFunction = (result:any) => {\r\n        let _keys = Object.keys(result);\r\n        if(_keys.includes(\"userProfileId\"))\r\n        {\r\n            this.setState({senderProfile : {\r\n                id : result.userProfileId,\r\n                identity: result.identity,\r\n                name: result.username,\r\n                category: \"person\",\r\n                image: \"\"\r\n            }})\r\n            let date = new Date()\r\n            let expirationDate = new Date()\r\n            expirationDate.setMinutes(date.getMinutes() + 7 * 24 * 60)  \r\n            this.cookies.set(\"userProfileId\", result.userProfileId, {sameSite: true, expires:expirationDate})\r\n        }\r\n        else\r\n        {\r\n            //Replace by modal\r\n            alert(\"Sorry we are not able to get some important information. We inform our team about it.\")\r\n        }\r\n    }\r\n\r\n    errorGetProfileFunction = (error:any) => {\r\n        alert(\"Sorry we are not able to perform operation. Check your internet connexion\")\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //Get userprofileid\r\n        postOrUpdateRequest(`${this.settings.host}/api/DeviceUsed?devicePlatform=4`, \"PUT\", {}, this.cookies.get('token')??\"\", this.successGetProfileFunction, this.errorGetProfileFunction)\r\n    }\r\n\r\n    getReceiverInformation = (identity:string, id:number|string, name:string, category:string|number) => {\r\n        if(identity !== \"\" )//|| id !== \"\" || name !== \"\"\r\n        {\r\n            this.setState({displayReceiverInformation: true})\r\n            this.setState({receiverProfile: {identity, id, name, category, image : \"\"}})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"home-page\">\r\n                <Head displayReceiverInformation = {this.state.displayReceiverInformation} receiverProfile = {this.state.receiverProfile} senderProfile = {this.state.senderProfile} />\r\n                <Body getReceiverInformation = {this.getReceiverInformation} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}